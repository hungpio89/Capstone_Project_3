|AHB_APB_UART
HCLK => HCLK.IN2
HRESETn => HRESETn.IN2
HTRANS[0] => HTRANS[0].IN1
HTRANS[1] => HTRANS[1].IN1
HWRITE => HWRITE.IN1
HSIZES[0] => HSIZES[0].IN1
HSIZES[1] => HSIZES[1].IN1
HBURST[0] => HBURST[0].IN1
HBURST[1] => HBURST[1].IN1
HBURST[2] => HBURST[2].IN1
HSELABPif => HSELABPif.IN1
HREADYin => HREADYin.IN1
HWDATA[0] => HWDATA[0].IN1
HWDATA[1] => HWDATA[1].IN1
HWDATA[2] => HWDATA[2].IN1
HWDATA[3] => HWDATA[3].IN1
HWDATA[4] => HWDATA[4].IN1
HWDATA[5] => HWDATA[5].IN1
HWDATA[6] => HWDATA[6].IN1
HWDATA[7] => HWDATA[7].IN1
HWDATA[8] => HWDATA[8].IN1
HWDATA[9] => HWDATA[9].IN1
HWDATA[10] => HWDATA[10].IN1
HWDATA[11] => HWDATA[11].IN1
HWDATA[12] => HWDATA[12].IN1
HWDATA[13] => HWDATA[13].IN1
HWDATA[14] => HWDATA[14].IN1
HWDATA[15] => HWDATA[15].IN1
HWDATA[16] => HWDATA[16].IN1
HWDATA[17] => HWDATA[17].IN1
HWDATA[18] => HWDATA[18].IN1
HWDATA[19] => HWDATA[19].IN1
HWDATA[20] => HWDATA[20].IN1
HWDATA[21] => HWDATA[21].IN1
HWDATA[22] => HWDATA[22].IN1
HWDATA[23] => HWDATA[23].IN1
HWDATA[24] => HWDATA[24].IN1
HWDATA[25] => HWDATA[25].IN1
HWDATA[26] => HWDATA[26].IN1
HWDATA[27] => HWDATA[27].IN1
HWDATA[28] => HWDATA[28].IN1
HWDATA[29] => HWDATA[29].IN1
HWDATA[30] => HWDATA[30].IN1
HWDATA[31] => HWDATA[31].IN1
UARTCLK => UARTCLK.IN1
desired_baud_rate[0] => desired_baud_rate[0].IN1
desired_baud_rate[1] => desired_baud_rate[1].IN1
desired_baud_rate[2] => desired_baud_rate[2].IN1
desired_baud_rate[3] => desired_baud_rate[3].IN1
desired_baud_rate[4] => desired_baud_rate[4].IN1
desired_baud_rate[5] => desired_baud_rate[5].IN1
desired_baud_rate[6] => desired_baud_rate[6].IN1
desired_baud_rate[7] => desired_baud_rate[7].IN1
desired_baud_rate[8] => desired_baud_rate[8].IN1
desired_baud_rate[9] => desired_baud_rate[9].IN1
desired_baud_rate[10] => desired_baud_rate[10].IN1
desired_baud_rate[11] => desired_baud_rate[11].IN1
desired_baud_rate[12] => desired_baud_rate[12].IN1
desired_baud_rate[13] => desired_baud_rate[13].IN1
desired_baud_rate[14] => desired_baud_rate[14].IN1
desired_baud_rate[15] => desired_baud_rate[15].IN1
desired_baud_rate[16] => desired_baud_rate[16].IN1
desired_baud_rate[17] => desired_baud_rate[17].IN1
desired_baud_rate[18] => desired_baud_rate[18].IN1
desired_baud_rate[19] => desired_baud_rate[19].IN1
parity_bit_mode => parity_bit_mode.IN1
stop_bit_twice => stop_bit_twice.IN1
number_data_receive[0] => number_data_receive[0].IN1
number_data_receive[1] => number_data_receive[1].IN1
number_data_receive[2] => number_data_receive[2].IN1
number_data_receive[3] => number_data_receive[3].IN1
number_data_trans[0] => number_data_trans[0].IN1
number_data_trans[1] => number_data_trans[1].IN1
number_data_trans[2] => number_data_trans[2].IN1
number_data_trans[3] => number_data_trans[3].IN1
ctrl_i[0] => ctrl_i[0].IN1
ctrl_i[1] => ctrl_i[1].IN1
ctrl_i[2] => ctrl_i[2].IN1
ctrl_i[3] => ctrl_i[3].IN1
ctrl_i[4] => ctrl_i[4].IN1
ctrl_i[5] => ctrl_i[5].IN1
ctrl_i[6] => ctrl_i[6].IN1
state_isr[0] => state_isr[0].IN1
state_isr[1] => state_isr[1].IN1
uart_mode_clk_sel => uart_mode_clk_sel.IN1
fifo_en[0] => fifo_en[0].IN1
fifo_en[1] => fifo_en[1].IN1
HREADYout <= AHB_SLAVE:AHB_APB_BRIDGE.HREADYout
HRESP[0] <= AHB_SLAVE:AHB_APB_BRIDGE.HRESP
HRESP[1] <= AHB_SLAVE:AHB_APB_BRIDGE.HRESP
HRDATA[0] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[1] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[2] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[3] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[4] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[5] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[6] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[7] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[8] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[9] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[10] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[11] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[12] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[13] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[14] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[15] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[16] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[17] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[18] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[19] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[20] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[21] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[22] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[23] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[24] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[25] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[26] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[27] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[28] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[29] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[30] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
HRDATA[31] <= AHB_SLAVE:AHB_APB_BRIDGE.HRDATA
UART_RXD => UART_RXD.IN1
UART_TXD <= APB_UART:APB_UART_BLOCK.UART_TXD
UART_ERROR_FLAG[0] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[1] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[2] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[3] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[4] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[5] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[6] <= APB_UART:APB_UART_BLOCK.UART_ERRORS
UART_ERROR_FLAG[7] <= AHB_SLAVE:AHB_APB_BRIDGE.AHB_SLAVE_ERRORS
UART_ERROR_FLAG[8] <= AHB_SLAVE:AHB_APB_BRIDGE.AHB_SLAVE_ERRORS
UART_ERROR_FLAG[9] <= AHB_SLAVE:AHB_APB_BRIDGE.AHB_SLAVE_ERRORS
HADDR[0] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[1] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[2] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[3] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[4] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[5] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[6] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[7] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[8] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[9] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[10] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[11] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[12] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[13] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[14] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[15] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[16] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[17] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[18] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[19] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[20] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[21] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[22] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[23] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[24] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[25] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[26] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[27] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[28] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[29] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[30] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
HADDR[31] <= AHB_SLAVE:AHB_APB_BRIDGE.HADDR
baud_tick <= APB_UART:APB_UART_BLOCK.baud_tick
data_trans[0] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[1] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[2] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[3] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[4] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[5] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[6] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[7] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[8] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[9] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[10] <= APB_UART:APB_UART_BLOCK.data_trans
data_trans[11] <= APB_UART:APB_UART_BLOCK.data_trans


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE
HCLK => HCLK.IN8
HRESETn => HRESETn.IN8
HTRANS[0] => Decoder2.IN1
HTRANS[1] => Decoder2.IN0
HSIZES[0] => HSIZES[0].IN1
HSIZES[1] => HSIZES[1].IN1
HBURST[0] => HBURST[0].IN1
HBURST[1] => HBURST[1].IN1
HBURST[2] => HBURST[2].IN1
HWRITE => HWRITE.IN1
HREADYin => always2.IN0
HWDATA[0] => HWDATA[0].IN1
HWDATA[1] => HWDATA[1].IN1
HWDATA[2] => HWDATA[2].IN1
HWDATA[3] => HWDATA[3].IN1
HWDATA[4] => HWDATA[4].IN1
HWDATA[5] => HWDATA[5].IN1
HWDATA[6] => HWDATA[6].IN1
HWDATA[7] => HWDATA[7].IN1
HWDATA[8] => HWDATA[8].IN1
HWDATA[9] => HWDATA[9].IN1
HWDATA[10] => HWDATA[10].IN1
HWDATA[11] => HWDATA[11].IN1
HWDATA[12] => HWDATA[12].IN1
HWDATA[13] => HWDATA[13].IN1
HWDATA[14] => HWDATA[14].IN1
HWDATA[15] => HWDATA[15].IN1
HWDATA[16] => HWDATA[16].IN1
HWDATA[17] => HWDATA[17].IN1
HWDATA[18] => HWDATA[18].IN1
HWDATA[19] => HWDATA[19].IN1
HWDATA[20] => HWDATA[20].IN1
HWDATA[21] => HWDATA[21].IN1
HWDATA[22] => HWDATA[22].IN1
HWDATA[23] => HWDATA[23].IN1
HWDATA[24] => HWDATA[24].IN1
HWDATA[25] => HWDATA[25].IN1
HWDATA[26] => HWDATA[26].IN1
HWDATA[27] => HWDATA[27].IN1
HWDATA[28] => HWDATA[28].IN1
HWDATA[29] => HWDATA[29].IN1
HWDATA[30] => HWDATA[30].IN1
HWDATA[31] => HWDATA[31].IN1
PRDATA[0] => PRDATA[0].IN1
PRDATA[1] => PRDATA[1].IN1
PRDATA[2] => PRDATA[2].IN1
PRDATA[3] => PRDATA[3].IN1
PRDATA[4] => PRDATA[4].IN1
PRDATA[5] => PRDATA[5].IN1
PRDATA[6] => PRDATA[6].IN1
PRDATA[7] => PRDATA[7].IN1
PRDATA[8] => PRDATA[8].IN1
PRDATA[9] => PRDATA[9].IN1
PRDATA[10] => PRDATA[10].IN1
PRDATA[11] => PRDATA[11].IN1
PRDATA[12] => PRDATA[12].IN1
PRDATA[13] => PRDATA[13].IN1
PRDATA[14] => PRDATA[14].IN1
PRDATA[15] => PRDATA[15].IN1
PRDATA[16] => PRDATA[16].IN1
PRDATA[17] => PRDATA[17].IN1
PRDATA[18] => PRDATA[18].IN1
PRDATA[19] => PRDATA[19].IN1
PRDATA[20] => PRDATA[20].IN1
PRDATA[21] => PRDATA[21].IN1
PRDATA[22] => PRDATA[22].IN1
PRDATA[23] => PRDATA[23].IN1
PRDATA[24] => PRDATA[24].IN1
PRDATA[25] => PRDATA[25].IN1
PRDATA[26] => PRDATA[26].IN1
PRDATA[27] => PRDATA[27].IN1
PRDATA[28] => PRDATA[28].IN1
PRDATA[29] => PRDATA[29].IN1
PRDATA[30] => PRDATA[30].IN1
PRDATA[31] => PRDATA[31].IN1
PREADY => PREADY.IN1
HSELABPif => always2.IN1
PWDATA[0] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[1] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[2] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[3] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[4] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[5] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[6] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[7] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[8] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[9] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[10] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[11] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[12] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[13] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[14] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[15] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[16] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[17] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[18] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[19] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[20] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[21] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[22] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[23] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[24] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[25] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[26] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[27] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[28] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[29] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[30] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PWDATA[31] <= DataLengthDecoder:D_FF_PWDATA_BLOCK.PWDATA
PADDR[0] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[1] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[2] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[3] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[4] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[5] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[6] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[7] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[8] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[9] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[10] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[11] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[12] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[13] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[14] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[15] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[16] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[17] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[18] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[19] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[20] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[21] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[22] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[23] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[24] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[25] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[26] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[27] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[28] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[29] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[30] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PADDR[31] <= D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK.Q
PENABLE <= D_FF_1bit:D_FF_PENABLE.Q
PWRITE <= D_FF_1bit_with_Sel:D_FF_PWRITE.Q
HREADYout <= HREADYout.DB_MAX_OUTPUT_PORT_TYPE
HRESP[0] <= HRESP[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
HRESP[1] <= HRESP[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
PSELx <= D_FF_1bit_with_Sel:D_FF_PSELX_BLOCK.Q
HRDATA[0] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[1] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[2] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[3] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[4] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[5] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[6] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[7] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[8] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[9] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[10] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[11] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[12] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[13] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[14] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[15] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[16] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[17] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[18] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[19] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[20] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[21] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[22] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[23] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[24] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[25] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[26] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[27] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[28] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[29] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[30] <= register_enable_only:RDATA_BLOCK.Q
HRDATA[31] <= register_enable_only:RDATA_BLOCK.Q
AHB_SLAVE_ERRORS[0] <= HADDR_ERROR.DB_MAX_OUTPUT_PORT_TYPE
AHB_SLAVE_ERRORS[1] <= HTRANS_ERROR.DB_MAX_OUTPUT_PORT_TYPE
AHB_SLAVE_ERRORS[2] <= always2.DB_MAX_OUTPUT_PORT_TYPE
HADDR[0] <= HADDR[0].DB_MAX_OUTPUT_PORT_TYPE
HADDR[1] <= HADDR[1].DB_MAX_OUTPUT_PORT_TYPE
HADDR[2] <= HADDR[2].DB_MAX_OUTPUT_PORT_TYPE
HADDR[3] <= HADDR[3].DB_MAX_OUTPUT_PORT_TYPE
HADDR[4] <= HADDR[4].DB_MAX_OUTPUT_PORT_TYPE
HADDR[5] <= HADDR[5].DB_MAX_OUTPUT_PORT_TYPE
HADDR[6] <= HADDR[6].DB_MAX_OUTPUT_PORT_TYPE
HADDR[7] <= HADDR[7].DB_MAX_OUTPUT_PORT_TYPE
HADDR[8] <= HADDR[8].DB_MAX_OUTPUT_PORT_TYPE
HADDR[9] <= HADDR[9].DB_MAX_OUTPUT_PORT_TYPE
HADDR[10] <= HADDR[10].DB_MAX_OUTPUT_PORT_TYPE
HADDR[11] <= HADDR[11].DB_MAX_OUTPUT_PORT_TYPE
HADDR[12] <= HADDR[12].DB_MAX_OUTPUT_PORT_TYPE
HADDR[13] <= HADDR[13].DB_MAX_OUTPUT_PORT_TYPE
HADDR[14] <= HADDR[14].DB_MAX_OUTPUT_PORT_TYPE
HADDR[15] <= HADDR[15].DB_MAX_OUTPUT_PORT_TYPE
HADDR[16] <= HADDR[16].DB_MAX_OUTPUT_PORT_TYPE
HADDR[17] <= HADDR[17].DB_MAX_OUTPUT_PORT_TYPE
HADDR[18] <= HADDR[18].DB_MAX_OUTPUT_PORT_TYPE
HADDR[19] <= HADDR[19].DB_MAX_OUTPUT_PORT_TYPE
HADDR[20] <= HADDR[20].DB_MAX_OUTPUT_PORT_TYPE
HADDR[21] <= HADDR[21].DB_MAX_OUTPUT_PORT_TYPE
HADDR[22] <= HADDR[22].DB_MAX_OUTPUT_PORT_TYPE
HADDR[23] <= HADDR[23].DB_MAX_OUTPUT_PORT_TYPE
HADDR[24] <= HADDR[24].DB_MAX_OUTPUT_PORT_TYPE
HADDR[25] <= HADDR[25].DB_MAX_OUTPUT_PORT_TYPE
HADDR[26] <= HADDR[26].DB_MAX_OUTPUT_PORT_TYPE
HADDR[27] <= HADDR[27].DB_MAX_OUTPUT_PORT_TYPE
HADDR[28] <= HADDR[28].DB_MAX_OUTPUT_PORT_TYPE
HADDR[29] <= HADDR[29].DB_MAX_OUTPUT_PORT_TYPE
HADDR[30] <= HADDR[30].DB_MAX_OUTPUT_PORT_TYPE
HADDR[31] <= HADDR[31].DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|FSM_AHB:State_machine
HCLK => HREADYout~reg0.CLK
HCLK => HwriteReg~reg0.CLK
HCLK => present_state~1.DATAIN
HRESETn => HREADYout~reg0.ACLR
HRESETn => HwriteReg~reg0.ACLR
HRESETn => present_state~3.DATAIN
Valid => Decoder0.IN0
Valid => next_state.DATAB
Valid => next_state.DATAB
HWRITE => HwriteReg~reg0.DATAIN
HWRITE => next_state.DATAB
HWRITE => next_state.DATAB
PREADY => HREADYout~reg0.DATAIN
HwriteReg <= HwriteReg~reg0.DB_MAX_OUTPUT_PORT_TYPE
HREADYout <= HREADYout~reg0.DB_MAX_OUTPUT_PORT_TYPE
APBen <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
PENABLE <= PENABLE.DB_MAX_OUTPUT_PORT_TYPE
PSELx <= PENABLE.DB_MAX_OUTPUT_PORT_TYPE
PWRITE <= WideOr5.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|EncoderDataLength:ENCODER_DATA_LENGTH_BLOCK
HSIZES[0] => Decoder0.IN1
HSIZES[1] => Decoder0.IN0
SIGNAL_LENGTH[0] <= mid_store_size.DB_MAX_OUTPUT_PORT_TYPE
SIGNAL_LENGTH[1] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
SIGNAL_LENGTH[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
SIGNAL_LENGTH[3] <= <GND>


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|register_enable_only:RDATA_BLOCK
clk => Q[0]~reg0.CLK
clk => Q[1]~reg0.CLK
clk => Q[2]~reg0.CLK
clk => Q[3]~reg0.CLK
clk => Q[4]~reg0.CLK
clk => Q[5]~reg0.CLK
clk => Q[6]~reg0.CLK
clk => Q[7]~reg0.CLK
clk => Q[8]~reg0.CLK
clk => Q[9]~reg0.CLK
clk => Q[10]~reg0.CLK
clk => Q[11]~reg0.CLK
clk => Q[12]~reg0.CLK
clk => Q[13]~reg0.CLK
clk => Q[14]~reg0.CLK
clk => Q[15]~reg0.CLK
clk => Q[16]~reg0.CLK
clk => Q[17]~reg0.CLK
clk => Q[18]~reg0.CLK
clk => Q[19]~reg0.CLK
clk => Q[20]~reg0.CLK
clk => Q[21]~reg0.CLK
clk => Q[22]~reg0.CLK
clk => Q[23]~reg0.CLK
clk => Q[24]~reg0.CLK
clk => Q[25]~reg0.CLK
clk => Q[26]~reg0.CLK
clk => Q[27]~reg0.CLK
clk => Q[28]~reg0.CLK
clk => Q[29]~reg0.CLK
clk => Q[30]~reg0.CLK
clk => Q[31]~reg0.CLK
rst_n => Q[0]~reg0.ACLR
rst_n => Q[1]~reg0.ACLR
rst_n => Q[2]~reg0.ACLR
rst_n => Q[3]~reg0.ACLR
rst_n => Q[4]~reg0.ACLR
rst_n => Q[5]~reg0.ACLR
rst_n => Q[6]~reg0.ACLR
rst_n => Q[7]~reg0.ACLR
rst_n => Q[8]~reg0.ACLR
rst_n => Q[9]~reg0.ACLR
rst_n => Q[10]~reg0.ACLR
rst_n => Q[11]~reg0.ACLR
rst_n => Q[12]~reg0.ACLR
rst_n => Q[13]~reg0.ACLR
rst_n => Q[14]~reg0.ACLR
rst_n => Q[15]~reg0.ACLR
rst_n => Q[16]~reg0.ACLR
rst_n => Q[17]~reg0.ACLR
rst_n => Q[18]~reg0.ACLR
rst_n => Q[19]~reg0.ACLR
rst_n => Q[20]~reg0.ACLR
rst_n => Q[21]~reg0.ACLR
rst_n => Q[22]~reg0.ACLR
rst_n => Q[23]~reg0.ACLR
rst_n => Q[24]~reg0.ACLR
rst_n => Q[25]~reg0.ACLR
rst_n => Q[26]~reg0.ACLR
rst_n => Q[27]~reg0.ACLR
rst_n => Q[28]~reg0.ACLR
rst_n => Q[29]~reg0.ACLR
rst_n => Q[30]~reg0.ACLR
rst_n => Q[31]~reg0.ACLR
enable => Decoder0.IN0
D[0] => Q.DATAA
D[1] => Q.DATAA
D[2] => Q.DATAA
D[3] => Q.DATAA
D[4] => Q.DATAA
D[5] => Q.DATAA
D[6] => Q.DATAA
D[7] => Q.DATAA
D[8] => Q.DATAA
D[9] => Q.DATAA
D[10] => Q.DATAA
D[11] => Q.DATAA
D[12] => Q.DATAA
D[13] => Q.DATAA
D[14] => Q.DATAA
D[15] => Q.DATAA
D[16] => Q.DATAA
D[17] => Q.DATAA
D[18] => Q.DATAA
D[19] => Q.DATAA
D[20] => Q.DATAA
D[21] => Q.DATAA
D[22] => Q.DATAA
D[23] => Q.DATAA
D[24] => Q.DATAA
D[25] => Q.DATAA
D[26] => Q.DATAA
D[27] => Q.DATAA
D[28] => Q.DATAA
D[29] => Q.DATAA
D[30] => Q.DATAA
D[31] => Q.DATAA
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= Q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= Q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[10] <= Q[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[11] <= Q[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[12] <= Q[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[13] <= Q[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[14] <= Q[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[15] <= Q[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[16] <= Q[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[17] <= Q[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[18] <= Q[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[19] <= Q[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[20] <= Q[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[21] <= Q[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[22] <= Q[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[23] <= Q[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[24] <= Q[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[25] <= Q[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[26] <= Q[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[27] <= Q[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[28] <= Q[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[29] <= Q[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[30] <= Q[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[31] <= Q[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|D_FF_1bit:D_FF_PENABLE
clk => Q~reg0.CLK
rst_ni => Q~reg0.ACLR
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|D_FF_1bit_with_Sel:D_FF_PWRITE
clk => Q~reg0.CLK
rst_ni => Q~reg0.ACLR
enable => Q~reg0.ENA
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|encoder_method:ENCODER_METHOD_ADDRESS_BLOCK
HBURST[0] => Mux0.IN10
HBURST[0] => Mux1.IN10
HBURST[0] => Mux2.IN10
HBURST[0] => Mux3.IN10
HBURST[0] => Mux4.IN10
HBURST[0] => Mux5.IN10
HBURST[0] => Mux6.IN10
HBURST[0] => Mux7.IN10
HBURST[0] => Mux8.IN10
HBURST[0] => Mux9.IN10
HBURST[0] => Mux10.IN10
HBURST[0] => Mux11.IN10
HBURST[0] => Mux12.IN10
HBURST[0] => Mux13.IN10
HBURST[0] => Mux14.IN10
HBURST[0] => Mux15.IN10
HBURST[0] => Mux16.IN10
HBURST[0] => Mux17.IN10
HBURST[0] => Mux18.IN10
HBURST[0] => Mux19.IN10
HBURST[0] => Mux20.IN10
HBURST[0] => Mux21.IN10
HBURST[0] => Mux22.IN10
HBURST[0] => Mux23.IN10
HBURST[0] => Mux24.IN10
HBURST[0] => Mux25.IN10
HBURST[0] => Mux26.IN10
HBURST[0] => Mux27.IN10
HBURST[0] => Mux28.IN10
HBURST[0] => Mux29.IN10
HBURST[0] => Mux30.IN9
HBURST[0] => Mux31.IN9
HBURST[1] => Mux0.IN9
HBURST[1] => Mux1.IN9
HBURST[1] => Mux2.IN9
HBURST[1] => Mux3.IN9
HBURST[1] => Mux4.IN9
HBURST[1] => Mux5.IN9
HBURST[1] => Mux6.IN9
HBURST[1] => Mux7.IN9
HBURST[1] => Mux8.IN9
HBURST[1] => Mux9.IN9
HBURST[1] => Mux10.IN9
HBURST[1] => Mux11.IN9
HBURST[1] => Mux12.IN9
HBURST[1] => Mux13.IN9
HBURST[1] => Mux14.IN9
HBURST[1] => Mux15.IN9
HBURST[1] => Mux16.IN9
HBURST[1] => Mux17.IN9
HBURST[1] => Mux18.IN9
HBURST[1] => Mux19.IN9
HBURST[1] => Mux20.IN9
HBURST[1] => Mux21.IN9
HBURST[1] => Mux22.IN9
HBURST[1] => Mux23.IN9
HBURST[1] => Mux24.IN9
HBURST[1] => Mux25.IN9
HBURST[1] => Mux26.IN9
HBURST[1] => Mux27.IN9
HBURST[1] => Mux28.IN9
HBURST[1] => Mux29.IN9
HBURST[1] => Mux30.IN8
HBURST[1] => Mux31.IN8
HBURST[2] => Mux0.IN8
HBURST[2] => Mux1.IN8
HBURST[2] => Mux2.IN8
HBURST[2] => Mux3.IN8
HBURST[2] => Mux4.IN8
HBURST[2] => Mux5.IN8
HBURST[2] => Mux6.IN8
HBURST[2] => Mux7.IN8
HBURST[2] => Mux8.IN8
HBURST[2] => Mux9.IN8
HBURST[2] => Mux10.IN8
HBURST[2] => Mux11.IN8
HBURST[2] => Mux12.IN8
HBURST[2] => Mux13.IN8
HBURST[2] => Mux14.IN8
HBURST[2] => Mux15.IN8
HBURST[2] => Mux16.IN8
HBURST[2] => Mux17.IN8
HBURST[2] => Mux18.IN8
HBURST[2] => Mux19.IN8
HBURST[2] => Mux20.IN8
HBURST[2] => Mux21.IN8
HBURST[2] => Mux22.IN8
HBURST[2] => Mux23.IN8
HBURST[2] => Mux24.IN8
HBURST[2] => Mux25.IN8
HBURST[2] => Mux26.IN8
HBURST[2] => Mux27.IN8
HBURST[2] => Mux28.IN8
HBURST[2] => Mux29.IN8
HBURST[2] => Mux30.IN7
HBURST[2] => Mux31.IN7
HCLK => HADDR_temp[0].CLK
HCLK => HADDR_temp[1].CLK
HCLK => HADDR_temp[2].CLK
HCLK => HADDR_temp[3].CLK
HCLK => HADDR_temp[4].CLK
HCLK => HADDR_temp[5].CLK
HCLK => HADDR_temp[6].CLK
HCLK => HADDR_temp[7].CLK
HCLK => HADDR_temp[8].CLK
HCLK => HADDR_temp[9].CLK
HCLK => HADDR_temp[10].CLK
HCLK => HADDR_temp[11].CLK
HCLK => HADDR_temp[12].CLK
HCLK => HADDR_temp[13].CLK
HCLK => HADDR_temp[14].CLK
HCLK => HADDR_temp[15].CLK
HCLK => HADDR_temp[16].CLK
HCLK => HADDR_temp[17].CLK
HCLK => HADDR_temp[18].CLK
HCLK => HADDR_temp[19].CLK
HCLK => HADDR_temp[20].CLK
HCLK => HADDR_temp[21].CLK
HCLK => HADDR_temp[22].CLK
HCLK => HADDR_temp[23].CLK
HCLK => HADDR_temp[24].CLK
HCLK => HADDR_temp[25].CLK
HCLK => HADDR_temp[26].CLK
HCLK => HADDR_temp[27].CLK
HCLK => HADDR_temp[28].CLK
HCLK => HADDR_temp[29].CLK
HCLK => HADDR_temp[30].CLK
HCLK => HADDR_temp[31].CLK
HCLK => signal_in_d.CLK
HRESETn => HADDR_temp[0].ACLR
HRESETn => HADDR_temp[1].ACLR
HRESETn => HADDR_temp[2].ACLR
HRESETn => HADDR_temp[3].ACLR
HRESETn => HADDR_temp[4].ACLR
HRESETn => HADDR_temp[5].ACLR
HRESETn => HADDR_temp[6].ACLR
HRESETn => HADDR_temp[7].ACLR
HRESETn => HADDR_temp[8].ACLR
HRESETn => HADDR_temp[9].ACLR
HRESETn => HADDR_temp[10].PRESET
HRESETn => HADDR_temp[11].ACLR
HRESETn => HADDR_temp[12].ACLR
HRESETn => HADDR_temp[13].ACLR
HRESETn => HADDR_temp[14].ACLR
HRESETn => HADDR_temp[15].ACLR
HRESETn => HADDR_temp[16].ACLR
HRESETn => HADDR_temp[17].ACLR
HRESETn => HADDR_temp[18].ACLR
HRESETn => HADDR_temp[19].ACLR
HRESETn => HADDR_temp[20].ACLR
HRESETn => HADDR_temp[21].ACLR
HRESETn => HADDR_temp[22].ACLR
HRESETn => HADDR_temp[23].ACLR
HRESETn => HADDR_temp[24].ACLR
HRESETn => HADDR_temp[25].ACLR
HRESETn => HADDR_temp[26].ACLR
HRESETn => HADDR_temp[27].ACLR
HRESETn => HADDR_temp[28].ACLR
HRESETn => HADDR_temp[29].ACLR
HRESETn => HADDR_temp[30].ACLR
HRESETn => HADDR_temp[31].PRESET
HRESETn => signal_in_d.ACLR
enable => rising_edge.IN1
enable => signal_in_d.DATAIN
HADDR[0] <= HADDR_temp[0].DB_MAX_OUTPUT_PORT_TYPE
HADDR[1] <= HADDR_temp[1].DB_MAX_OUTPUT_PORT_TYPE
HADDR[2] <= HADDR_temp[2].DB_MAX_OUTPUT_PORT_TYPE
HADDR[3] <= HADDR_temp[3].DB_MAX_OUTPUT_PORT_TYPE
HADDR[4] <= HADDR_temp[4].DB_MAX_OUTPUT_PORT_TYPE
HADDR[5] <= HADDR_temp[5].DB_MAX_OUTPUT_PORT_TYPE
HADDR[6] <= HADDR_temp[6].DB_MAX_OUTPUT_PORT_TYPE
HADDR[7] <= HADDR_temp[7].DB_MAX_OUTPUT_PORT_TYPE
HADDR[8] <= HADDR_temp[8].DB_MAX_OUTPUT_PORT_TYPE
HADDR[9] <= HADDR_temp[9].DB_MAX_OUTPUT_PORT_TYPE
HADDR[10] <= HADDR_temp[10].DB_MAX_OUTPUT_PORT_TYPE
HADDR[11] <= HADDR_temp[11].DB_MAX_OUTPUT_PORT_TYPE
HADDR[12] <= HADDR_temp[12].DB_MAX_OUTPUT_PORT_TYPE
HADDR[13] <= HADDR_temp[13].DB_MAX_OUTPUT_PORT_TYPE
HADDR[14] <= HADDR_temp[14].DB_MAX_OUTPUT_PORT_TYPE
HADDR[15] <= HADDR_temp[15].DB_MAX_OUTPUT_PORT_TYPE
HADDR[16] <= HADDR_temp[16].DB_MAX_OUTPUT_PORT_TYPE
HADDR[17] <= HADDR_temp[17].DB_MAX_OUTPUT_PORT_TYPE
HADDR[18] <= HADDR_temp[18].DB_MAX_OUTPUT_PORT_TYPE
HADDR[19] <= HADDR_temp[19].DB_MAX_OUTPUT_PORT_TYPE
HADDR[20] <= HADDR_temp[20].DB_MAX_OUTPUT_PORT_TYPE
HADDR[21] <= HADDR_temp[21].DB_MAX_OUTPUT_PORT_TYPE
HADDR[22] <= HADDR_temp[22].DB_MAX_OUTPUT_PORT_TYPE
HADDR[23] <= HADDR_temp[23].DB_MAX_OUTPUT_PORT_TYPE
HADDR[24] <= HADDR_temp[24].DB_MAX_OUTPUT_PORT_TYPE
HADDR[25] <= HADDR_temp[25].DB_MAX_OUTPUT_PORT_TYPE
HADDR[26] <= HADDR_temp[26].DB_MAX_OUTPUT_PORT_TYPE
HADDR[27] <= HADDR_temp[27].DB_MAX_OUTPUT_PORT_TYPE
HADDR[28] <= HADDR_temp[28].DB_MAX_OUTPUT_PORT_TYPE
HADDR[29] <= HADDR_temp[29].DB_MAX_OUTPUT_PORT_TYPE
HADDR[30] <= HADDR_temp[30].DB_MAX_OUTPUT_PORT_TYPE
HADDR[31] <= HADDR_temp[31].DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|D_FF_32bit_with_Sel:D_FF_PADDR_BLOCK
clk => Q[0]~reg0.CLK
clk => Q[1]~reg0.CLK
clk => Q[2]~reg0.CLK
clk => Q[3]~reg0.CLK
clk => Q[4]~reg0.CLK
clk => Q[5]~reg0.CLK
clk => Q[6]~reg0.CLK
clk => Q[7]~reg0.CLK
clk => Q[8]~reg0.CLK
clk => Q[9]~reg0.CLK
clk => Q[10]~reg0.CLK
clk => Q[11]~reg0.CLK
clk => Q[12]~reg0.CLK
clk => Q[13]~reg0.CLK
clk => Q[14]~reg0.CLK
clk => Q[15]~reg0.CLK
clk => Q[16]~reg0.CLK
clk => Q[17]~reg0.CLK
clk => Q[18]~reg0.CLK
clk => Q[19]~reg0.CLK
clk => Q[20]~reg0.CLK
clk => Q[21]~reg0.CLK
clk => Q[22]~reg0.CLK
clk => Q[23]~reg0.CLK
clk => Q[24]~reg0.CLK
clk => Q[25]~reg0.CLK
clk => Q[26]~reg0.CLK
clk => Q[27]~reg0.CLK
clk => Q[28]~reg0.CLK
clk => Q[29]~reg0.CLK
clk => Q[30]~reg0.CLK
clk => Q[31]~reg0.CLK
rst_ni => Q[0]~reg0.ACLR
rst_ni => Q[1]~reg0.ACLR
rst_ni => Q[2]~reg0.ACLR
rst_ni => Q[3]~reg0.ACLR
rst_ni => Q[4]~reg0.ACLR
rst_ni => Q[5]~reg0.ACLR
rst_ni => Q[6]~reg0.ACLR
rst_ni => Q[7]~reg0.ACLR
rst_ni => Q[8]~reg0.ACLR
rst_ni => Q[9]~reg0.ACLR
rst_ni => Q[10]~reg0.ACLR
rst_ni => Q[11]~reg0.ACLR
rst_ni => Q[12]~reg0.ACLR
rst_ni => Q[13]~reg0.ACLR
rst_ni => Q[14]~reg0.ACLR
rst_ni => Q[15]~reg0.ACLR
rst_ni => Q[16]~reg0.ACLR
rst_ni => Q[17]~reg0.ACLR
rst_ni => Q[18]~reg0.ACLR
rst_ni => Q[19]~reg0.ACLR
rst_ni => Q[20]~reg0.ACLR
rst_ni => Q[21]~reg0.ACLR
rst_ni => Q[22]~reg0.ACLR
rst_ni => Q[23]~reg0.ACLR
rst_ni => Q[24]~reg0.ACLR
rst_ni => Q[25]~reg0.ACLR
rst_ni => Q[26]~reg0.ACLR
rst_ni => Q[27]~reg0.ACLR
rst_ni => Q[28]~reg0.ACLR
rst_ni => Q[29]~reg0.ACLR
rst_ni => Q[30]~reg0.ACLR
rst_ni => Q[31]~reg0.ACLR
enable => Q[0]~reg0.ENA
enable => Q[31]~reg0.ENA
enable => Q[30]~reg0.ENA
enable => Q[29]~reg0.ENA
enable => Q[28]~reg0.ENA
enable => Q[27]~reg0.ENA
enable => Q[26]~reg0.ENA
enable => Q[25]~reg0.ENA
enable => Q[24]~reg0.ENA
enable => Q[23]~reg0.ENA
enable => Q[22]~reg0.ENA
enable => Q[21]~reg0.ENA
enable => Q[20]~reg0.ENA
enable => Q[19]~reg0.ENA
enable => Q[18]~reg0.ENA
enable => Q[17]~reg0.ENA
enable => Q[16]~reg0.ENA
enable => Q[15]~reg0.ENA
enable => Q[14]~reg0.ENA
enable => Q[13]~reg0.ENA
enable => Q[12]~reg0.ENA
enable => Q[11]~reg0.ENA
enable => Q[10]~reg0.ENA
enable => Q[9]~reg0.ENA
enable => Q[8]~reg0.ENA
enable => Q[7]~reg0.ENA
enable => Q[6]~reg0.ENA
enable => Q[5]~reg0.ENA
enable => Q[4]~reg0.ENA
enable => Q[3]~reg0.ENA
enable => Q[2]~reg0.ENA
enable => Q[1]~reg0.ENA
D[0] => Q[0]~reg0.DATAIN
D[1] => Q[1]~reg0.DATAIN
D[2] => Q[2]~reg0.DATAIN
D[3] => Q[3]~reg0.DATAIN
D[4] => Q[4]~reg0.DATAIN
D[5] => Q[5]~reg0.DATAIN
D[6] => Q[6]~reg0.DATAIN
D[7] => Q[7]~reg0.DATAIN
D[8] => Q[8]~reg0.DATAIN
D[9] => Q[9]~reg0.DATAIN
D[10] => Q[10]~reg0.DATAIN
D[11] => Q[11]~reg0.DATAIN
D[12] => Q[12]~reg0.DATAIN
D[13] => Q[13]~reg0.DATAIN
D[14] => Q[14]~reg0.DATAIN
D[15] => Q[15]~reg0.DATAIN
D[16] => Q[16]~reg0.DATAIN
D[17] => Q[17]~reg0.DATAIN
D[18] => Q[18]~reg0.DATAIN
D[19] => Q[19]~reg0.DATAIN
D[20] => Q[20]~reg0.DATAIN
D[21] => Q[21]~reg0.DATAIN
D[22] => Q[22]~reg0.DATAIN
D[23] => Q[23]~reg0.DATAIN
D[24] => Q[24]~reg0.DATAIN
D[25] => Q[25]~reg0.DATAIN
D[26] => Q[26]~reg0.DATAIN
D[27] => Q[27]~reg0.DATAIN
D[28] => Q[28]~reg0.DATAIN
D[29] => Q[29]~reg0.DATAIN
D[30] => Q[30]~reg0.DATAIN
D[31] => Q[31]~reg0.DATAIN
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= Q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= Q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[10] <= Q[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[11] <= Q[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[12] <= Q[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[13] <= Q[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[14] <= Q[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[15] <= Q[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[16] <= Q[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[17] <= Q[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[18] <= Q[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[19] <= Q[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[20] <= Q[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[21] <= Q[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[22] <= Q[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[23] <= Q[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[24] <= Q[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[25] <= Q[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[26] <= Q[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[27] <= Q[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[28] <= Q[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[29] <= Q[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[30] <= Q[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[31] <= Q[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|D_FF_1bit_with_Sel:D_FF_PSELX_BLOCK
clk => Q~reg0.CLK
rst_ni => Q~reg0.ACLR
enable => Q~reg0.ENA
D => Q~reg0.DATAIN
Q <= Q~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|AHB_SLAVE:AHB_APB_BRIDGE|DataLengthDecoder:D_FF_PWDATA_BLOCK
HCLK => mid_pwdata[0].CLK
HCLK => mid_pwdata[1].CLK
HCLK => mid_pwdata[2].CLK
HCLK => mid_pwdata[3].CLK
HCLK => mid_pwdata[4].CLK
HCLK => mid_pwdata[5].CLK
HCLK => mid_pwdata[6].CLK
HCLK => mid_pwdata[7].CLK
HCLK => mid_pwdata[8].CLK
HCLK => mid_pwdata[9].CLK
HCLK => mid_pwdata[10].CLK
HCLK => mid_pwdata[11].CLK
HCLK => mid_pwdata[12].CLK
HCLK => mid_pwdata[13].CLK
HCLK => mid_pwdata[14].CLK
HCLK => mid_pwdata[15].CLK
HCLK => mid_pwdata[16].CLK
HCLK => mid_pwdata[17].CLK
HCLK => mid_pwdata[18].CLK
HCLK => mid_pwdata[19].CLK
HCLK => mid_pwdata[20].CLK
HCLK => mid_pwdata[21].CLK
HCLK => mid_pwdata[22].CLK
HCLK => mid_pwdata[23].CLK
HCLK => mid_pwdata[24].CLK
HCLK => mid_pwdata[25].CLK
HCLK => mid_pwdata[26].CLK
HCLK => mid_pwdata[27].CLK
HCLK => mid_pwdata[28].CLK
HCLK => mid_pwdata[29].CLK
HCLK => mid_pwdata[30].CLK
HCLK => mid_pwdata[31].CLK
HRESETn => mid_pwdata[0].ACLR
HRESETn => mid_pwdata[1].ACLR
HRESETn => mid_pwdata[2].ACLR
HRESETn => mid_pwdata[3].ACLR
HRESETn => mid_pwdata[4].ACLR
HRESETn => mid_pwdata[5].ACLR
HRESETn => mid_pwdata[6].ACLR
HRESETn => mid_pwdata[7].ACLR
HRESETn => mid_pwdata[8].ACLR
HRESETn => mid_pwdata[9].ACLR
HRESETn => mid_pwdata[10].ACLR
HRESETn => mid_pwdata[11].ACLR
HRESETn => mid_pwdata[12].ACLR
HRESETn => mid_pwdata[13].ACLR
HRESETn => mid_pwdata[14].ACLR
HRESETn => mid_pwdata[15].ACLR
HRESETn => mid_pwdata[16].ACLR
HRESETn => mid_pwdata[17].ACLR
HRESETn => mid_pwdata[18].ACLR
HRESETn => mid_pwdata[19].ACLR
HRESETn => mid_pwdata[20].ACLR
HRESETn => mid_pwdata[21].ACLR
HRESETn => mid_pwdata[22].ACLR
HRESETn => mid_pwdata[23].ACLR
HRESETn => mid_pwdata[24].ACLR
HRESETn => mid_pwdata[25].ACLR
HRESETn => mid_pwdata[26].ACLR
HRESETn => mid_pwdata[27].ACLR
HRESETn => mid_pwdata[28].ACLR
HRESETn => mid_pwdata[29].ACLR
HRESETn => mid_pwdata[30].ACLR
HRESETn => mid_pwdata[31].ACLR
HWriteReg => PWDATA[31]$latch.LATCH_ENABLE
HWriteReg => PWDATA[30]$latch.LATCH_ENABLE
HWriteReg => PWDATA[29]$latch.LATCH_ENABLE
HWriteReg => PWDATA[28]$latch.LATCH_ENABLE
HWriteReg => PWDATA[27]$latch.LATCH_ENABLE
HWriteReg => PWDATA[26]$latch.LATCH_ENABLE
HWriteReg => PWDATA[25]$latch.LATCH_ENABLE
HWriteReg => PWDATA[24]$latch.LATCH_ENABLE
HWriteReg => PWDATA[23]$latch.LATCH_ENABLE
HWriteReg => PWDATA[22]$latch.LATCH_ENABLE
HWriteReg => PWDATA[21]$latch.LATCH_ENABLE
HWriteReg => PWDATA[20]$latch.LATCH_ENABLE
HWriteReg => PWDATA[19]$latch.LATCH_ENABLE
HWriteReg => PWDATA[18]$latch.LATCH_ENABLE
HWriteReg => PWDATA[17]$latch.LATCH_ENABLE
HWriteReg => PWDATA[16]$latch.LATCH_ENABLE
HWriteReg => PWDATA[15]$latch.LATCH_ENABLE
HWriteReg => PWDATA[14]$latch.LATCH_ENABLE
HWriteReg => PWDATA[13]$latch.LATCH_ENABLE
HWriteReg => PWDATA[12]$latch.LATCH_ENABLE
HWriteReg => PWDATA[11]$latch.LATCH_ENABLE
HWriteReg => PWDATA[10]$latch.LATCH_ENABLE
HWriteReg => PWDATA[9]$latch.LATCH_ENABLE
HWriteReg => PWDATA[8]$latch.LATCH_ENABLE
HWriteReg => PWDATA[7]$latch.LATCH_ENABLE
HWriteReg => PWDATA[6]$latch.LATCH_ENABLE
HWriteReg => PWDATA[5]$latch.LATCH_ENABLE
HWriteReg => PWDATA[4]$latch.LATCH_ENABLE
HWriteReg => PWDATA[3]$latch.LATCH_ENABLE
HWriteReg => PWDATA[2]$latch.LATCH_ENABLE
HWriteReg => PWDATA[1]$latch.LATCH_ENABLE
HWriteReg => PWDATA[0]$latch.LATCH_ENABLE
HWriteReg => mid_pwdata[31].ENA
HWriteReg => mid_pwdata[30].ENA
HWriteReg => mid_pwdata[29].ENA
HWriteReg => mid_pwdata[28].ENA
HWriteReg => mid_pwdata[27].ENA
HWriteReg => mid_pwdata[26].ENA
HWriteReg => mid_pwdata[25].ENA
HWriteReg => mid_pwdata[24].ENA
HWriteReg => mid_pwdata[23].ENA
HWriteReg => mid_pwdata[22].ENA
HWriteReg => mid_pwdata[21].ENA
HWriteReg => mid_pwdata[20].ENA
HWriteReg => mid_pwdata[19].ENA
HWriteReg => mid_pwdata[18].ENA
HWriteReg => mid_pwdata[17].ENA
HWriteReg => mid_pwdata[16].ENA
HWriteReg => mid_pwdata[15].ENA
HWriteReg => mid_pwdata[14].ENA
HWriteReg => mid_pwdata[13].ENA
HWriteReg => mid_pwdata[12].ENA
HWriteReg => mid_pwdata[11].ENA
HWriteReg => mid_pwdata[10].ENA
HWriteReg => mid_pwdata[9].ENA
HWriteReg => mid_pwdata[8].ENA
HWriteReg => mid_pwdata[7].ENA
HWriteReg => mid_pwdata[6].ENA
HWriteReg => mid_pwdata[5].ENA
HWriteReg => mid_pwdata[4].ENA
HWriteReg => mid_pwdata[3].ENA
HWriteReg => mid_pwdata[2].ENA
HWriteReg => mid_pwdata[1].ENA
HWriteReg => mid_pwdata[0].ENA
HWDATA[0] => mid_pwdata[0].DATAIN
HWDATA[1] => mid_pwdata[1].DATAIN
HWDATA[2] => mid_pwdata[2].DATAIN
HWDATA[3] => mid_pwdata[3].DATAIN
HWDATA[4] => mid_pwdata[4].DATAIN
HWDATA[5] => mid_pwdata[5].DATAIN
HWDATA[6] => mid_pwdata[6].DATAIN
HWDATA[7] => mid_pwdata[7].DATAIN
HWDATA[8] => mid_pwdata[8].DATAIN
HWDATA[9] => mid_pwdata[9].DATAIN
HWDATA[10] => mid_pwdata[10].DATAIN
HWDATA[11] => mid_pwdata[11].DATAIN
HWDATA[12] => mid_pwdata[12].DATAIN
HWDATA[13] => mid_pwdata[13].DATAIN
HWDATA[14] => mid_pwdata[14].DATAIN
HWDATA[15] => mid_pwdata[15].DATAIN
HWDATA[16] => mid_pwdata[16].DATAIN
HWDATA[17] => mid_pwdata[17].DATAIN
HWDATA[18] => mid_pwdata[18].DATAIN
HWDATA[19] => mid_pwdata[19].DATAIN
HWDATA[20] => mid_pwdata[20].DATAIN
HWDATA[21] => mid_pwdata[21].DATAIN
HWDATA[22] => mid_pwdata[22].DATAIN
HWDATA[23] => mid_pwdata[23].DATAIN
HWDATA[24] => mid_pwdata[24].DATAIN
HWDATA[25] => mid_pwdata[25].DATAIN
HWDATA[26] => mid_pwdata[26].DATAIN
HWDATA[27] => mid_pwdata[27].DATAIN
HWDATA[28] => mid_pwdata[28].DATAIN
HWDATA[29] => mid_pwdata[29].DATAIN
HWDATA[30] => mid_pwdata[30].DATAIN
HWDATA[31] => mid_pwdata[31].DATAIN
SIGNAL_LENGTH[0] => Decoder0.IN3
SIGNAL_LENGTH[1] => Decoder0.IN2
SIGNAL_LENGTH[2] => Decoder0.IN1
SIGNAL_LENGTH[3] => Decoder0.IN0
PWDATA[0] <= PWDATA[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[1] <= PWDATA[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[2] <= PWDATA[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[3] <= PWDATA[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[4] <= PWDATA[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[5] <= PWDATA[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[6] <= PWDATA[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[7] <= PWDATA[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[8] <= PWDATA[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[9] <= PWDATA[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[10] <= PWDATA[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[11] <= PWDATA[11]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[12] <= PWDATA[12]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[13] <= PWDATA[13]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[14] <= PWDATA[14]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[15] <= PWDATA[15]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[16] <= PWDATA[16]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[17] <= PWDATA[17]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[18] <= PWDATA[18]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[19] <= PWDATA[19]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[20] <= PWDATA[20]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[21] <= PWDATA[21]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[22] <= PWDATA[22]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[23] <= PWDATA[23]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[24] <= PWDATA[24]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[25] <= PWDATA[25]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[26] <= PWDATA[26]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[27] <= PWDATA[27]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[28] <= PWDATA[28]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[29] <= PWDATA[29]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[30] <= PWDATA[30]$latch.DB_MAX_OUTPUT_PORT_TYPE
PWDATA[31] <= PWDATA[31]$latch.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK
PCLK => PCLK.IN5
UARTCLK => UARTCLK.IN1
PRESETn => PRESETn.IN13
desired_baud_rate[0] => desired_baud_rate[0].IN1
desired_baud_rate[1] => desired_baud_rate[1].IN1
desired_baud_rate[2] => desired_baud_rate[2].IN1
desired_baud_rate[3] => desired_baud_rate[3].IN1
desired_baud_rate[4] => desired_baud_rate[4].IN1
desired_baud_rate[5] => desired_baud_rate[5].IN1
desired_baud_rate[6] => desired_baud_rate[6].IN1
desired_baud_rate[7] => desired_baud_rate[7].IN1
desired_baud_rate[8] => desired_baud_rate[8].IN1
desired_baud_rate[9] => desired_baud_rate[9].IN1
desired_baud_rate[10] => desired_baud_rate[10].IN1
desired_baud_rate[11] => desired_baud_rate[11].IN1
desired_baud_rate[12] => desired_baud_rate[12].IN1
desired_baud_rate[13] => desired_baud_rate[13].IN1
desired_baud_rate[14] => desired_baud_rate[14].IN1
desired_baud_rate[15] => desired_baud_rate[15].IN1
desired_baud_rate[16] => desired_baud_rate[16].IN1
desired_baud_rate[17] => desired_baud_rate[17].IN1
desired_baud_rate[18] => desired_baud_rate[18].IN1
desired_baud_rate[19] => desired_baud_rate[19].IN1
parity_bit_mode => parity_bit_mode.IN5
stop_bit_twice => stop_bit_twice.IN4
fifo_en[0] => fifo_en[0].IN1
fifo_en[1] => fifo_en[1].IN1
number_data_receive[0] => number_data_receive[0].IN3
number_data_receive[1] => number_data_receive[1].IN3
number_data_receive[2] => number_data_receive[2].IN3
number_data_receive[3] => number_data_receive[3].IN3
number_data_trans[0] => number_data_trans[0].IN1
number_data_trans[1] => number_data_trans[1].IN1
number_data_trans[2] => number_data_trans[2].IN1
number_data_trans[3] => number_data_trans[3].IN1
ctrl_i[0] => ctrl_i[0].IN1
ctrl_i[1] => ctrl_i[1].IN1
ctrl_i[2] => ctrl_i[2].IN1
ctrl_i[3] => ctrl_i[3].IN1
ctrl_i[4] => ctrl_i[4].IN1
ctrl_i[5] => ctrl_i[5].IN1
ctrl_i[6] => ctrl_i[6].IN1
state_isr[0] => state_i[2].DATAIN
state_isr[1] => state_i[3].DATAIN
uart_mode_clk_sel => uart_mode_clk_sel.IN2
PSEL => PSEL.IN1
PENABLE => PENABLE.IN1
PWRITE => PWRITE.IN4
PADDR[0] => PADDR[0].IN2
PADDR[1] => PADDR[1].IN2
PADDR[2] => PADDR[2].IN2
PADDR[3] => PADDR[3].IN2
PADDR[4] => PADDR[4].IN2
PADDR[5] => PADDR[5].IN2
PADDR[6] => PADDR[6].IN2
PADDR[7] => PADDR[7].IN2
PADDR[8] => PADDR[8].IN1
PADDR[9] => PADDR[9].IN1
PADDR[10] => PADDR[10].IN1
PADDR[11] => PADDR[11].IN1
PWDATA[0] => PWDATA[0].IN1
PWDATA[1] => PWDATA[1].IN1
PWDATA[2] => PWDATA[2].IN1
PWDATA[3] => PWDATA[3].IN1
PWDATA[4] => PWDATA[4].IN1
PWDATA[5] => PWDATA[5].IN1
PWDATA[6] => PWDATA[6].IN1
PWDATA[7] => PWDATA[7].IN1
PREADY <= PREADY.DB_MAX_OUTPUT_PORT_TYPE
PRDATA[0] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[1] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[2] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[3] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[4] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[5] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[6] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[7] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[8] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[9] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[10] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[11] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[12] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[13] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[14] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[15] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[16] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[17] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[18] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[19] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[20] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[21] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[22] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[23] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[24] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[25] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[26] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[27] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[28] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[29] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[30] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
PRDATA[31] <= apb_interface:APB_INTERFACE_BLOCK.PRDATA
UART_RXD => UART_RXD.IN1
UART_TXD <= shift_register_wr:SHIFT_REGISTER_TX_BLOCK.tx_out
UART_ERRORS[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
UART_ERRORS[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
UART_ERRORS[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
UART_ERRORS[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
UART_ERRORS[4] <= rx_fsm:RX_FSM_BLOCK.error_rx_detect
UART_ERRORS[5] <= tx_fsm:TX_FSM_BLOCK.error_tx_detect
UART_ERRORS[6] <= custom_fsm_wr_rd:CUSTOM_FSM_WR_RD_BLOCK.error_ctrl
baud_tick <= baud_tick.DB_MAX_OUTPUT_PORT_TYPE
data_trans[0] <= data_trans[0].DB_MAX_OUTPUT_PORT_TYPE
data_trans[1] <= data_trans[1].DB_MAX_OUTPUT_PORT_TYPE
data_trans[2] <= data_trans[2].DB_MAX_OUTPUT_PORT_TYPE
data_trans[3] <= data_trans[3].DB_MAX_OUTPUT_PORT_TYPE
data_trans[4] <= data_trans[4].DB_MAX_OUTPUT_PORT_TYPE
data_trans[5] <= data_trans[5].DB_MAX_OUTPUT_PORT_TYPE
data_trans[6] <= data_trans[6].DB_MAX_OUTPUT_PORT_TYPE
data_trans[7] <= data_trans[7].DB_MAX_OUTPUT_PORT_TYPE
data_trans[8] <= data_trans[8].DB_MAX_OUTPUT_PORT_TYPE
data_trans[9] <= data_trans[9].DB_MAX_OUTPUT_PORT_TYPE
data_trans[10] <= data_trans[10].DB_MAX_OUTPUT_PORT_TYPE
data_trans[11] <= data_trans[11].DB_MAX_OUTPUT_PORT_TYPE
rx_write_en <= rx_write_en.DB_MAX_OUTPUT_PORT_TYPE
rx_read_en <= rx_read_en.DB_MAX_OUTPUT_PORT_TYPE
ctrl_rx_buffer <= ctrl_rx_buffer.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|apb_interface:APB_INTERFACE_BLOCK
PCLK => PCLK.IN1
PRESETn => PRESETn.IN1
transfer => Equal0.IN2
PENABLE => Equal0.IN3
PWRITE => uart_run_flag_wr.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_data_mid.OUTPUTSELECT
PWRITE => uart_run_flag_rd.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PRDATA_temp.OUTPUTSELECT
PWRITE => PREADY_temp.OUTPUTSELECT
PADDR[0] => Decoder0.IN7
PADDR[1] => Decoder0.IN6
PADDR[2] => Decoder0.IN5
PADDR[3] => Decoder0.IN4
PADDR[4] => Decoder0.IN3
PADDR[5] => Decoder0.IN2
PADDR[6] => Decoder0.IN1
PADDR[7] => Decoder0.IN0
PWDATA[0] => uart_data_mid.DATAB
PWDATA[1] => uart_data_mid.DATAB
PWDATA[2] => uart_data_mid.DATAB
PWDATA[3] => uart_data_mid.DATAB
PWDATA[4] => uart_data_mid.DATAB
PWDATA[5] => uart_data_mid.DATAB
PWDATA[6] => uart_data_mid.DATAB
PWDATA[7] => uart_data_mid.DATAB
read_data[0] => Selector7.IN4
read_data[1] => Selector6.IN4
read_data[2] => Selector5.IN4
read_data[3] => Selector4.IN4
read_data[4] => Selector3.IN5
read_data[5] => Selector2.IN5
read_data[6] => Selector1.IN5
read_data[7] => Selector0.IN4
TXdone => TXdone.IN2
RXdone => RXdone.IN1
ctrl_o[0] => Selector7.IN5
ctrl_o[1] => Selector6.IN5
ctrl_o[2] => Selector5.IN5
ctrl_o[3] => Selector4.IN5
ctrl_o[4] => Selector3.IN6
ctrl_o[5] => Selector2.IN6
ctrl_o[6] => Selector1.IN6
state_isr_o[0] => Selector7.IN6
state_isr_o[1] => Selector6.IN6
state_isr_o[2] => Selector5.IN6
state_isr_o[3] => Selector4.IN6
cd_o[0] => Selector7.IN7
cd_o[1] => Selector6.IN7
cd_o[2] => Selector5.IN7
cd_o[3] => Selector4.IN7
cd_o[4] => Selector3.IN7
cd_o[5] => Selector2.IN7
cd_o[6] => Selector1.IN7
cd_o[7] => Selector0.IN5
cd_o[8] => PRDATA_temp.DATAB
cd_o[9] => PRDATA_temp.DATAB
cd_o[10] => PRDATA_temp.DATAB
cd_o[11] => PRDATA_temp.DATAB
cd_o[12] => PRDATA_temp.DATAB
rx_buffer_overrun <= <GND>
tx_buffer_overrun <= <GND>
uart_run_flag <= or_1bit:OR_GATE_BLOCK_3.data_out
PREADY <= or_1bit:OR_GATE_BLOCK_1.data_out
clk_div16 <= baud_rate_divisor:BAUD_RATE_DIVISOR_BLOCK.clk_out
write_data[0] <= uart_data_mid[0].DB_MAX_OUTPUT_PORT_TYPE
write_data[1] <= uart_data_mid[1].DB_MAX_OUTPUT_PORT_TYPE
write_data[2] <= uart_data_mid[2].DB_MAX_OUTPUT_PORT_TYPE
write_data[3] <= uart_data_mid[3].DB_MAX_OUTPUT_PORT_TYPE
write_data[4] <= uart_data_mid[4].DB_MAX_OUTPUT_PORT_TYPE
write_data[5] <= uart_data_mid[5].DB_MAX_OUTPUT_PORT_TYPE
write_data[6] <= uart_data_mid[6].DB_MAX_OUTPUT_PORT_TYPE
write_data[7] <= uart_data_mid[7].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[0] <= PRDATA_temp[0].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[1] <= PRDATA_temp[1].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[2] <= PRDATA_temp[2].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[3] <= PRDATA_temp[3].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[4] <= PRDATA_temp[4].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[5] <= PRDATA_temp[5].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[6] <= PRDATA_temp[6].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[7] <= PRDATA_temp[7].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[8] <= PRDATA_temp[8].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[9] <= PRDATA_temp[9].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[10] <= PRDATA_temp[10].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[11] <= PRDATA_temp[11].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[12] <= PRDATA_temp[12].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[13] <= PRDATA_temp[13].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[14] <= PRDATA_temp[14].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[15] <= PRDATA_temp[15].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[16] <= PRDATA_temp[16].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[17] <= PRDATA_temp[17].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[18] <= PRDATA_temp[18].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[19] <= PRDATA_temp[19].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[20] <= PRDATA_temp[20].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[21] <= PRDATA_temp[21].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[22] <= PRDATA_temp[22].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[23] <= PRDATA_temp[23].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[24] <= PRDATA_temp[24].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[25] <= PRDATA_temp[25].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[26] <= PRDATA_temp[26].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[27] <= PRDATA_temp[27].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[28] <= PRDATA_temp[28].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[29] <= PRDATA_temp[29].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[30] <= PRDATA_temp[30].DB_MAX_OUTPUT_PORT_TYPE
PRDATA[31] <= PRDATA_temp[31].DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|apb_interface:APB_INTERFACE_BLOCK|baud_rate_divisor:BAUD_RATE_DIVISOR_BLOCK
clk => clk_out~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
rst_n => clk_out~reg0.ACLR
rst_n => counter[0].ACLR
rst_n => counter[1].ACLR
rst_n => counter[2].ACLR
rst_n => counter[3].ACLR
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|apb_interface:APB_INTERFACE_BLOCK|or_1bit:OR_GATE_BLOCK_1
data_in1 => data_out.IN0
data_in2 => data_out.IN1
data_out <= data_out.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|apb_interface:APB_INTERFACE_BLOCK|or_1bit:OR_GATE_BLOCK_2
data_in1 => data_out.IN0
data_in2 => data_out.IN1
data_out <= data_out.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|apb_interface:APB_INTERFACE_BLOCK|or_1bit:OR_GATE_BLOCK_3
data_in1 => data_out.IN0
data_in2 => data_out.IN1
data_out <= data_out.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|ctrl_interface_signal:CTRL_INTERFACE_SIGNAL_BLOCK
CLK => ctrl_o[0]~reg0.CLK
CLK => ctrl_o[1]~reg0.CLK
CLK => ctrl_o[2]~reg0.CLK
CLK => ctrl_o[3]~reg0.CLK
CLK => ctrl_o[4]~reg0.CLK
CLK => ctrl_o[5]~reg0.CLK
CLK => ctrl_o[6]~reg0.CLK
RESETn => ctrl_o[0]~reg0.PRESET
RESETn => ctrl_o[1]~reg0.PRESET
RESETn => ctrl_o[2]~reg0.ACLR
RESETn => ctrl_o[3]~reg0.ACLR
RESETn => ctrl_o[4]~reg0.ACLR
RESETn => ctrl_o[5]~reg0.ACLR
RESETn => ctrl_o[6]~reg0.ACLR
RESETn => state_isr_o[1]$latch.LATCH_ENABLE
RESETn => state_isr_o[0]$latch.LATCH_ENABLE
PADDR[0] => Decoder0.IN7
PADDR[1] => Decoder0.IN6
PADDR[2] => Decoder0.IN5
PADDR[3] => Decoder0.IN4
PADDR[4] => Decoder0.IN3
PADDR[5] => Decoder0.IN2
PADDR[6] => Decoder0.IN1
PADDR[7] => Decoder0.IN0
cfg_en => ctrl_o[0]~reg0.ENA
cfg_en => ctrl_o[6]~reg0.ENA
cfg_en => ctrl_o[5]~reg0.ENA
cfg_en => ctrl_o[4]~reg0.ENA
cfg_en => ctrl_o[3]~reg0.ENA
cfg_en => ctrl_o[2]~reg0.ENA
cfg_en => ctrl_o[1]~reg0.ENA
desired_baud_rate[0] => ~NO_FANOUT~
desired_baud_rate[1] => ~NO_FANOUT~
desired_baud_rate[2] => ~NO_FANOUT~
desired_baud_rate[3] => ~NO_FANOUT~
desired_baud_rate[4] => ~NO_FANOUT~
desired_baud_rate[5] => ~NO_FANOUT~
desired_baud_rate[6] => ~NO_FANOUT~
desired_baud_rate[7] => ~NO_FANOUT~
desired_baud_rate[8] => ~NO_FANOUT~
desired_baud_rate[9] => ~NO_FANOUT~
desired_baud_rate[10] => ~NO_FANOUT~
desired_baud_rate[11] => ~NO_FANOUT~
desired_baud_rate[12] => ~NO_FANOUT~
desired_baud_rate[13] => ~NO_FANOUT~
desired_baud_rate[14] => ~NO_FANOUT~
desired_baud_rate[15] => ~NO_FANOUT~
desired_baud_rate[16] => ~NO_FANOUT~
desired_baud_rate[17] => ~NO_FANOUT~
desired_baud_rate[18] => ~NO_FANOUT~
desired_baud_rate[19] => ~NO_FANOUT~
ctrl_i[0] => Selector6.IN4
ctrl_i[1] => Selector5.IN4
ctrl_i[2] => Selector4.IN4
ctrl_i[3] => Selector3.IN4
ctrl_i[4] => Selector2.IN4
ctrl_i[5] => Selector1.IN4
ctrl_i[6] => Selector0.IN4
state_isr_i[0] => state_isr_o[0]$latch.DATAIN
state_isr_i[1] => state_isr_o[1]$latch.DATAIN
state_isr_i[2] => ~NO_FANOUT~
state_isr_i[3] => ~NO_FANOUT~
ctrl_o[0] <= ctrl_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrl_o[1] <= ctrl_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrl_o[2] <= ctrl_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrl_o[3] <= ctrl_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrl_o[4] <= ctrl_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrl_o[5] <= ctrl_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ctrl_o[6] <= ctrl_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
state_isr_o[0] <= state_isr_o[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
state_isr_o[1] <= state_isr_o[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
state_isr_o[2] <= <GND>
state_isr_o[3] <= <GND>
cd_o[0] <= <VCC>
cd_o[1] <= <VCC>
cd_o[2] <= <GND>
cd_o[3] <= <VCC>
cd_o[4] <= <VCC>
cd_o[5] <= <GND>
cd_o[6] <= <GND>
cd_o[7] <= <GND>
cd_o[8] <= <GND>
cd_o[9] <= <GND>
cd_o[10] <= <GND>
cd_o[11] <= <GND>
cd_o[12] <= <GND>


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|transfer_validate:TRANSFER_VALID_BLOCK
PADDR[0] => Equal0.IN3
PADDR[1] => Equal0.IN2
PADDR[2] => Equal0.IN0
PADDR[3] => Equal0.IN1
PSEL => always0.IN1
transfer <= always0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|custom_fsm_wr_rd:CUSTOM_FSM_WR_RD_BLOCK
PCLK => present_state~1.DATAIN
PRESETn => present_state~3.DATAIN
transfer => next_state.OUTPUTSELECT
transfer => next_state.OUTPUTSELECT
transfer => next_state.OUTPUTSELECT
transfer => next_state.OUTPUTSELECT
PREADY => always1.IN0
PREADY => always1.IN0
ctrl[0] => Mux0.IN4
ctrl[0] => Mux1.IN3
ctrl[0] => Mux2.IN5
ctrl[0] => Mux3.IN5
ctrl[1] => Mux0.IN3
ctrl[1] => Mux1.IN2
ctrl[1] => Mux2.IN4
ctrl[1] => Mux3.IN4
uart_run_flag => present_state.OUTPUTSELECT
uart_run_flag => present_state.OUTPUTSELECT
uart_run_flag => present_state.OUTPUTSELECT
uart_run_flag => present_state.OUTPUTSELECT
uart_run_flag => present_state.OUTPUTSELECT
uart_run_flag => present_state.OUTPUTSELECT
PWRITE => always1.IN1
PWRITE => Selector14.IN4
PWRITE => Mux1.IN4
PWRITE => Mux0.IN5
PWRITE => Mux1.IN5
PWRITE => Selector6.IN6
PWRITE => Selector10.IN7
PWRITE => Selector13.IN2
PWRITE => Selector4.IN2
PWRITE => always1.IN1
PWRITE => Mux2.IN2
PWRITE => Mux2.IN3
PWRITE => Mux0.IN2
PWRITE => Selector10.IN2
error_ctrl <= error_ctrl$latch.DB_MAX_OUTPUT_PORT_TYPE
TXen <= TXen$latch.DB_MAX_OUTPUT_PORT_TYPE
RXen <= RXen$latch.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|BAUD_RATE_GENERATOR:BAUD_RATE_GENERATOR_BLOCK
uart_ref_clk => baud_tick.DATAB
rst_n => clk_sel.ACLR
rst_n => counter_baud[0]~reg0.ACLR
rst_n => counter_baud[1]~reg0.ACLR
rst_n => counter_baud[2]~reg0.ACLR
rst_n => counter_baud[3]~reg0.ACLR
rst_n => counter_baud[4]~reg0.ACLR
rst_n => counter_baud[5]~reg0.ACLR
rst_n => counter_baud[6]~reg0.ACLR
rst_n => counter_baud[7]~reg0.ACLR
rst_n => counter_baud[8]~reg0.ACLR
rst_n => counter_baud[9]~reg0.ACLR
rst_n => counter_baud[10]~reg0.ACLR
rst_n => counter_baud[11]~reg0.ACLR
rst_n => counter_baud[12]~reg0.ACLR
uart_mode_sel => Decoder0.IN0
baud_div_16 => clk_sel.CLK
baud_div_16 => counter_baud[0]~reg0.CLK
baud_div_16 => counter_baud[1]~reg0.CLK
baud_div_16 => counter_baud[2]~reg0.CLK
baud_div_16 => counter_baud[3]~reg0.CLK
baud_div_16 => counter_baud[4]~reg0.CLK
baud_div_16 => counter_baud[5]~reg0.CLK
baud_div_16 => counter_baud[6]~reg0.CLK
baud_div_16 => counter_baud[7]~reg0.CLK
baud_div_16 => counter_baud[8]~reg0.CLK
baud_div_16 => counter_baud[9]~reg0.CLK
baud_div_16 => counter_baud[10]~reg0.CLK
baud_div_16 => counter_baud[11]~reg0.CLK
baud_div_16 => counter_baud[12]~reg0.CLK
cd[0] => Add0.IN26
cd[1] => Add0.IN25
cd[2] => Add0.IN24
cd[3] => Add0.IN23
cd[4] => Add0.IN22
cd[5] => Add0.IN21
cd[6] => Add0.IN20
cd[7] => Add0.IN19
cd[8] => Add0.IN18
cd[9] => Add0.IN17
cd[10] => Add0.IN16
cd[11] => Add0.IN15
cd[12] => Add0.IN14
baud_tick <= baud_tick.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[0] <= counter_baud[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[1] <= counter_baud[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[2] <= counter_baud[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[3] <= counter_baud[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[4] <= counter_baud[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[5] <= counter_baud[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[6] <= counter_baud[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[7] <= counter_baud[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[8] <= counter_baud[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[9] <= counter_baud[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[10] <= counter_baud[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[11] <= counter_baud[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
counter_baud[12] <= counter_baud[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[8] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[9] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[10] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[11] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
cd_count[12] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|tx_fsm:TX_FSM_BLOCK
baud_tick => present_state~1.DATAIN
PRESETn => present_state~3.DATAIN
stop_bit_twice => always2.IN0
stop_bit_twice => always2.IN0
parity_bit_mode => always2.IN1
parity_bit_mode => always2.IN1
parity_bit_mode => always2.IN1
parity_bit_mode => always2.IN0
parity_bit_mode => always2.IN1
parity_bit_mode => always2.IN1
parity_bit_mode => always2.IN1
parity_bit_mode => always2.IN0
TXen => Selector1.IN8
TXen => Selector0.IN8
TXen => ctrl_tx_buffer.DATAB
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
PWRITE => present_state.OUTPUTSELECT
start_bit => Selector1.IN6
start_bit => Selector2.IN0
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => always2.IN1
data_on_trans => Selector3.IN0
data_on_trans => Selector4.IN0
data_on_trans => Selector5.IN0
data_on_trans => Selector6.IN0
data_on_trans => Selector21.IN3
data_on_trans => Selector21.IN4
data_on_trans => Selector21.IN5
data_on_trans => Selector21.IN6
parity_bit => Selector11.IN12
parity_bit => Selector21.IN11
stop_bit => always2.IN1
stop_bit => always2.IN1
stop_bit => Selector0.IN11
stop_bit => Selector22.IN3
stop_bit => Selector21.IN13
number_data_trans[0] => Decoder0.IN3
number_data_trans[1] => Decoder0.IN2
number_data_trans[2] => Decoder0.IN1
number_data_trans[3] => Decoder0.IN0
ctrl_shift_register[0] <= ctrl_shift_register[0].DB_MAX_OUTPUT_PORT_TYPE
ctrl_shift_register[1] <= WideOr8.DB_MAX_OUTPUT_PORT_TYPE
ctrl_shift_register[2] <= ctrl_shift_register[2].DB_MAX_OUTPUT_PORT_TYPE
ctrl_shift_register[3] <= ctrl_shift_register.DB_MAX_OUTPUT_PORT_TYPE
ctrl_tx_buffer <= ctrl_tx_buffer.DB_MAX_OUTPUT_PORT_TYPE
tick_count[0] <= WideOr11.DB_MAX_OUTPUT_PORT_TYPE
tick_count[1] <= WideOr10.DB_MAX_OUTPUT_PORT_TYPE
tick_count[2] <= WideOr9.DB_MAX_OUTPUT_PORT_TYPE
tick_count[3] <= tick_count[3].DB_MAX_OUTPUT_PORT_TYPE
error_tx_detect <= error_tx_detect.DB_MAX_OUTPUT_PORT_TYPE
done_tx <= Selector22.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|D_FF_8bit:DFF_TEMPORARY_STORING_WRITE
rst_ni => q_reg[0].ACLR
rst_ni => q_reg[1].ACLR
rst_ni => q_reg[2].ACLR
rst_ni => q_reg[3].ACLR
rst_ni => q_reg[4].ACLR
rst_ni => q_reg[5].ACLR
rst_ni => q_reg[6].ACLR
rst_ni => q_reg[7].ACLR
clk_i => q_reg[0].CLK
clk_i => q_reg[1].CLK
clk_i => q_reg[2].CLK
clk_i => q_reg[3].CLK
clk_i => q_reg[4].CLK
clk_i => q_reg[5].CLK
clk_i => q_reg[6].CLK
clk_i => q_reg[7].CLK
enable => q_reg[0].ENA
enable => q_reg[7].ENA
enable => q_reg[6].ENA
enable => q_reg[5].ENA
enable => q_reg[4].ENA
enable => q_reg[3].ENA
enable => q_reg[2].ENA
enable => q_reg[1].ENA
D[0] => q_reg[0].DATAIN
D[1] => q_reg[1].DATAIN
D[2] => q_reg[2].DATAIN
D[3] => q_reg[3].DATAIN
D[4] => q_reg[4].DATAIN
D[5] => q_reg[5].DATAIN
D[6] => q_reg[6].DATAIN
D[7] => q_reg[7].DATAIN
Q[0] <= q_reg[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= q_reg[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= q_reg[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= q_reg[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= q_reg[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= q_reg[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= q_reg[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= q_reg[7].DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|shift_register_wr:SHIFT_REGISTER_TX_BLOCK
parity_bit_mode => parity_bit_send.OUTPUTSELECT
ctrl_shift_register[0] => Mux1.IN18
ctrl_shift_register[0] => Decoder0.IN3
ctrl_shift_register[1] => Mux1.IN17
ctrl_shift_register[1] => Decoder0.IN2
ctrl_shift_register[2] => Mux1.IN16
ctrl_shift_register[2] => Decoder0.IN1
ctrl_shift_register[3] => Mux1.IN15
ctrl_shift_register[3] => Decoder0.IN0
tick_count[0] => WideOr0.IN0
tick_count[0] => Add0.IN8
tick_count[1] => WideOr0.IN1
tick_count[1] => Add0.IN7
tick_count[2] => WideOr0.IN2
tick_count[2] => Add0.IN6
tick_count[3] => WideOr0.IN3
tick_count[3] => Add0.IN5
data_in[0] => always0.IN0
data_in[0] => Mux0.IN10
data_in[1] => always0.IN1
data_in[1] => Mux0.IN9
data_in[2] => always0.IN1
data_in[2] => Mux0.IN8
data_in[3] => always0.IN1
data_in[3] => Mux0.IN7
data_in[4] => always0.IN1
data_in[4] => Mux0.IN6
data_in[5] => always0.IN1
data_in[5] => Mux0.IN5
data_in[6] => always0.IN1
data_in[6] => Mux0.IN4
data_in[7] => always0.IN1
data_in[7] => Mux0.IN3
start_bit <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
data_on_trans <= data_on_trans.DB_MAX_OUTPUT_PORT_TYPE
parity_bit <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
stop_bit <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
tx_out <= Mux1.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|transmit_FIFO:TX_FIFO_BLOCK
clk_i => ptr_addr_wr_i[0]~reg0.CLK
clk_i => ptr_addr_wr_i[1]~reg0.CLK
clk_i => ptr_addr_wr_i[2]~reg0.CLK
clk_i => ptr_addr_wr_i[3]~reg0.CLK
clk_i => ptr_addr_wr_i[4]~reg0.CLK
clk_i => mem[31][0].CLK
clk_i => mem[31][1].CLK
clk_i => mem[31][2].CLK
clk_i => mem[31][3].CLK
clk_i => mem[31][4].CLK
clk_i => mem[31][5].CLK
clk_i => mem[31][6].CLK
clk_i => mem[31][7].CLK
clk_i => mem[30][0].CLK
clk_i => mem[30][1].CLK
clk_i => mem[30][2].CLK
clk_i => mem[30][3].CLK
clk_i => mem[30][4].CLK
clk_i => mem[30][5].CLK
clk_i => mem[30][6].CLK
clk_i => mem[30][7].CLK
clk_i => mem[29][0].CLK
clk_i => mem[29][1].CLK
clk_i => mem[29][2].CLK
clk_i => mem[29][3].CLK
clk_i => mem[29][4].CLK
clk_i => mem[29][5].CLK
clk_i => mem[29][6].CLK
clk_i => mem[29][7].CLK
clk_i => mem[28][0].CLK
clk_i => mem[28][1].CLK
clk_i => mem[28][2].CLK
clk_i => mem[28][3].CLK
clk_i => mem[28][4].CLK
clk_i => mem[28][5].CLK
clk_i => mem[28][6].CLK
clk_i => mem[28][7].CLK
clk_i => mem[27][0].CLK
clk_i => mem[27][1].CLK
clk_i => mem[27][2].CLK
clk_i => mem[27][3].CLK
clk_i => mem[27][4].CLK
clk_i => mem[27][5].CLK
clk_i => mem[27][6].CLK
clk_i => mem[27][7].CLK
clk_i => mem[26][0].CLK
clk_i => mem[26][1].CLK
clk_i => mem[26][2].CLK
clk_i => mem[26][3].CLK
clk_i => mem[26][4].CLK
clk_i => mem[26][5].CLK
clk_i => mem[26][6].CLK
clk_i => mem[26][7].CLK
clk_i => mem[25][0].CLK
clk_i => mem[25][1].CLK
clk_i => mem[25][2].CLK
clk_i => mem[25][3].CLK
clk_i => mem[25][4].CLK
clk_i => mem[25][5].CLK
clk_i => mem[25][6].CLK
clk_i => mem[25][7].CLK
clk_i => mem[24][0].CLK
clk_i => mem[24][1].CLK
clk_i => mem[24][2].CLK
clk_i => mem[24][3].CLK
clk_i => mem[24][4].CLK
clk_i => mem[24][5].CLK
clk_i => mem[24][6].CLK
clk_i => mem[24][7].CLK
clk_i => mem[23][0].CLK
clk_i => mem[23][1].CLK
clk_i => mem[23][2].CLK
clk_i => mem[23][3].CLK
clk_i => mem[23][4].CLK
clk_i => mem[23][5].CLK
clk_i => mem[23][6].CLK
clk_i => mem[23][7].CLK
clk_i => mem[22][0].CLK
clk_i => mem[22][1].CLK
clk_i => mem[22][2].CLK
clk_i => mem[22][3].CLK
clk_i => mem[22][4].CLK
clk_i => mem[22][5].CLK
clk_i => mem[22][6].CLK
clk_i => mem[22][7].CLK
clk_i => mem[21][0].CLK
clk_i => mem[21][1].CLK
clk_i => mem[21][2].CLK
clk_i => mem[21][3].CLK
clk_i => mem[21][4].CLK
clk_i => mem[21][5].CLK
clk_i => mem[21][6].CLK
clk_i => mem[21][7].CLK
clk_i => mem[20][0].CLK
clk_i => mem[20][1].CLK
clk_i => mem[20][2].CLK
clk_i => mem[20][3].CLK
clk_i => mem[20][4].CLK
clk_i => mem[20][5].CLK
clk_i => mem[20][6].CLK
clk_i => mem[20][7].CLK
clk_i => mem[19][0].CLK
clk_i => mem[19][1].CLK
clk_i => mem[19][2].CLK
clk_i => mem[19][3].CLK
clk_i => mem[19][4].CLK
clk_i => mem[19][5].CLK
clk_i => mem[19][6].CLK
clk_i => mem[19][7].CLK
clk_i => mem[18][0].CLK
clk_i => mem[18][1].CLK
clk_i => mem[18][2].CLK
clk_i => mem[18][3].CLK
clk_i => mem[18][4].CLK
clk_i => mem[18][5].CLK
clk_i => mem[18][6].CLK
clk_i => mem[18][7].CLK
clk_i => mem[17][0].CLK
clk_i => mem[17][1].CLK
clk_i => mem[17][2].CLK
clk_i => mem[17][3].CLK
clk_i => mem[17][4].CLK
clk_i => mem[17][5].CLK
clk_i => mem[17][6].CLK
clk_i => mem[17][7].CLK
clk_i => mem[16][0].CLK
clk_i => mem[16][1].CLK
clk_i => mem[16][2].CLK
clk_i => mem[16][3].CLK
clk_i => mem[16][4].CLK
clk_i => mem[16][5].CLK
clk_i => mem[16][6].CLK
clk_i => mem[16][7].CLK
clk_i => mem[15][0].CLK
clk_i => mem[15][1].CLK
clk_i => mem[15][2].CLK
clk_i => mem[15][3].CLK
clk_i => mem[15][4].CLK
clk_i => mem[15][5].CLK
clk_i => mem[15][6].CLK
clk_i => mem[15][7].CLK
clk_i => mem[14][0].CLK
clk_i => mem[14][1].CLK
clk_i => mem[14][2].CLK
clk_i => mem[14][3].CLK
clk_i => mem[14][4].CLK
clk_i => mem[14][5].CLK
clk_i => mem[14][6].CLK
clk_i => mem[14][7].CLK
clk_i => mem[13][0].CLK
clk_i => mem[13][1].CLK
clk_i => mem[13][2].CLK
clk_i => mem[13][3].CLK
clk_i => mem[13][4].CLK
clk_i => mem[13][5].CLK
clk_i => mem[13][6].CLK
clk_i => mem[13][7].CLK
clk_i => mem[12][0].CLK
clk_i => mem[12][1].CLK
clk_i => mem[12][2].CLK
clk_i => mem[12][3].CLK
clk_i => mem[12][4].CLK
clk_i => mem[12][5].CLK
clk_i => mem[12][6].CLK
clk_i => mem[12][7].CLK
clk_i => mem[11][0].CLK
clk_i => mem[11][1].CLK
clk_i => mem[11][2].CLK
clk_i => mem[11][3].CLK
clk_i => mem[11][4].CLK
clk_i => mem[11][5].CLK
clk_i => mem[11][6].CLK
clk_i => mem[11][7].CLK
clk_i => mem[10][0].CLK
clk_i => mem[10][1].CLK
clk_i => mem[10][2].CLK
clk_i => mem[10][3].CLK
clk_i => mem[10][4].CLK
clk_i => mem[10][5].CLK
clk_i => mem[10][6].CLK
clk_i => mem[10][7].CLK
clk_i => mem[9][0].CLK
clk_i => mem[9][1].CLK
clk_i => mem[9][2].CLK
clk_i => mem[9][3].CLK
clk_i => mem[9][4].CLK
clk_i => mem[9][5].CLK
clk_i => mem[9][6].CLK
clk_i => mem[9][7].CLK
clk_i => mem[8][0].CLK
clk_i => mem[8][1].CLK
clk_i => mem[8][2].CLK
clk_i => mem[8][3].CLK
clk_i => mem[8][4].CLK
clk_i => mem[8][5].CLK
clk_i => mem[8][6].CLK
clk_i => mem[8][7].CLK
clk_i => mem[7][0].CLK
clk_i => mem[7][1].CLK
clk_i => mem[7][2].CLK
clk_i => mem[7][3].CLK
clk_i => mem[7][4].CLK
clk_i => mem[7][5].CLK
clk_i => mem[7][6].CLK
clk_i => mem[7][7].CLK
clk_i => mem[6][0].CLK
clk_i => mem[6][1].CLK
clk_i => mem[6][2].CLK
clk_i => mem[6][3].CLK
clk_i => mem[6][4].CLK
clk_i => mem[6][5].CLK
clk_i => mem[6][6].CLK
clk_i => mem[6][7].CLK
clk_i => mem[5][0].CLK
clk_i => mem[5][1].CLK
clk_i => mem[5][2].CLK
clk_i => mem[5][3].CLK
clk_i => mem[5][4].CLK
clk_i => mem[5][5].CLK
clk_i => mem[5][6].CLK
clk_i => mem[5][7].CLK
clk_i => mem[4][0].CLK
clk_i => mem[4][1].CLK
clk_i => mem[4][2].CLK
clk_i => mem[4][3].CLK
clk_i => mem[4][4].CLK
clk_i => mem[4][5].CLK
clk_i => mem[4][6].CLK
clk_i => mem[4][7].CLK
clk_i => mem[3][0].CLK
clk_i => mem[3][1].CLK
clk_i => mem[3][2].CLK
clk_i => mem[3][3].CLK
clk_i => mem[3][4].CLK
clk_i => mem[3][5].CLK
clk_i => mem[3][6].CLK
clk_i => mem[3][7].CLK
clk_i => mem[2][0].CLK
clk_i => mem[2][1].CLK
clk_i => mem[2][2].CLK
clk_i => mem[2][3].CLK
clk_i => mem[2][4].CLK
clk_i => mem[2][5].CLK
clk_i => mem[2][6].CLK
clk_i => mem[2][7].CLK
clk_i => mem[1][0].CLK
clk_i => mem[1][1].CLK
clk_i => mem[1][2].CLK
clk_i => mem[1][3].CLK
clk_i => mem[1][4].CLK
clk_i => mem[1][5].CLK
clk_i => mem[1][6].CLK
clk_i => mem[1][7].CLK
clk_i => mem[0][0].CLK
clk_i => mem[0][1].CLK
clk_i => mem[0][2].CLK
clk_i => mem[0][3].CLK
clk_i => mem[0][4].CLK
clk_i => mem[0][5].CLK
clk_i => mem[0][6].CLK
clk_i => mem[0][7].CLK
clk_i => wr_data_o[0]~reg0.CLK
clk_i => wr_data_o[1]~reg0.CLK
clk_i => wr_data_o[2]~reg0.CLK
clk_i => wr_data_o[3]~reg0.CLK
clk_i => wr_data_o[4]~reg0.CLK
clk_i => wr_data_o[5]~reg0.CLK
clk_i => wr_data_o[6]~reg0.CLK
clk_i => wr_data_o[7]~reg0.CLK
clk_i => ptr_addr_wr_o[0]~reg0.CLK
clk_i => ptr_addr_wr_o[1]~reg0.CLK
clk_i => ptr_addr_wr_o[2]~reg0.CLK
clk_i => ptr_addr_wr_o[3]~reg0.CLK
clk_i => ptr_addr_wr_o[4]~reg0.CLK
rst_ni => ptr_addr_wr_i[0]~reg0.ACLR
rst_ni => ptr_addr_wr_i[1]~reg0.ACLR
rst_ni => ptr_addr_wr_i[2]~reg0.ACLR
rst_ni => ptr_addr_wr_i[3]~reg0.ACLR
rst_ni => ptr_addr_wr_i[4]~reg0.ACLR
rst_ni => mem[31][0].ACLR
rst_ni => mem[31][1].ACLR
rst_ni => mem[31][2].ACLR
rst_ni => mem[31][3].ACLR
rst_ni => mem[31][4].ACLR
rst_ni => mem[31][5].ACLR
rst_ni => mem[31][6].ACLR
rst_ni => mem[31][7].ACLR
rst_ni => mem[30][0].ACLR
rst_ni => mem[30][1].ACLR
rst_ni => mem[30][2].ACLR
rst_ni => mem[30][3].ACLR
rst_ni => mem[30][4].ACLR
rst_ni => mem[30][5].ACLR
rst_ni => mem[30][6].ACLR
rst_ni => mem[30][7].ACLR
rst_ni => mem[29][0].ACLR
rst_ni => mem[29][1].ACLR
rst_ni => mem[29][2].ACLR
rst_ni => mem[29][3].ACLR
rst_ni => mem[29][4].ACLR
rst_ni => mem[29][5].ACLR
rst_ni => mem[29][6].ACLR
rst_ni => mem[29][7].ACLR
rst_ni => mem[28][0].ACLR
rst_ni => mem[28][1].ACLR
rst_ni => mem[28][2].ACLR
rst_ni => mem[28][3].ACLR
rst_ni => mem[28][4].ACLR
rst_ni => mem[28][5].ACLR
rst_ni => mem[28][6].ACLR
rst_ni => mem[28][7].ACLR
rst_ni => mem[27][0].ACLR
rst_ni => mem[27][1].ACLR
rst_ni => mem[27][2].ACLR
rst_ni => mem[27][3].ACLR
rst_ni => mem[27][4].ACLR
rst_ni => mem[27][5].ACLR
rst_ni => mem[27][6].ACLR
rst_ni => mem[27][7].ACLR
rst_ni => mem[26][0].ACLR
rst_ni => mem[26][1].ACLR
rst_ni => mem[26][2].ACLR
rst_ni => mem[26][3].ACLR
rst_ni => mem[26][4].ACLR
rst_ni => mem[26][5].ACLR
rst_ni => mem[26][6].ACLR
rst_ni => mem[26][7].ACLR
rst_ni => mem[25][0].ACLR
rst_ni => mem[25][1].ACLR
rst_ni => mem[25][2].ACLR
rst_ni => mem[25][3].ACLR
rst_ni => mem[25][4].ACLR
rst_ni => mem[25][5].ACLR
rst_ni => mem[25][6].ACLR
rst_ni => mem[25][7].ACLR
rst_ni => mem[24][0].ACLR
rst_ni => mem[24][1].ACLR
rst_ni => mem[24][2].ACLR
rst_ni => mem[24][3].ACLR
rst_ni => mem[24][4].ACLR
rst_ni => mem[24][5].ACLR
rst_ni => mem[24][6].ACLR
rst_ni => mem[24][7].ACLR
rst_ni => mem[23][0].ACLR
rst_ni => mem[23][1].ACLR
rst_ni => mem[23][2].ACLR
rst_ni => mem[23][3].ACLR
rst_ni => mem[23][4].ACLR
rst_ni => mem[23][5].ACLR
rst_ni => mem[23][6].ACLR
rst_ni => mem[23][7].ACLR
rst_ni => mem[22][0].ACLR
rst_ni => mem[22][1].ACLR
rst_ni => mem[22][2].ACLR
rst_ni => mem[22][3].ACLR
rst_ni => mem[22][4].ACLR
rst_ni => mem[22][5].ACLR
rst_ni => mem[22][6].ACLR
rst_ni => mem[22][7].ACLR
rst_ni => mem[21][0].ACLR
rst_ni => mem[21][1].ACLR
rst_ni => mem[21][2].ACLR
rst_ni => mem[21][3].ACLR
rst_ni => mem[21][4].ACLR
rst_ni => mem[21][5].ACLR
rst_ni => mem[21][6].ACLR
rst_ni => mem[21][7].ACLR
rst_ni => mem[20][0].ACLR
rst_ni => mem[20][1].ACLR
rst_ni => mem[20][2].ACLR
rst_ni => mem[20][3].ACLR
rst_ni => mem[20][4].ACLR
rst_ni => mem[20][5].ACLR
rst_ni => mem[20][6].ACLR
rst_ni => mem[20][7].ACLR
rst_ni => mem[19][0].ACLR
rst_ni => mem[19][1].ACLR
rst_ni => mem[19][2].ACLR
rst_ni => mem[19][3].ACLR
rst_ni => mem[19][4].ACLR
rst_ni => mem[19][5].ACLR
rst_ni => mem[19][6].ACLR
rst_ni => mem[19][7].ACLR
rst_ni => mem[18][0].ACLR
rst_ni => mem[18][1].ACLR
rst_ni => mem[18][2].ACLR
rst_ni => mem[18][3].ACLR
rst_ni => mem[18][4].ACLR
rst_ni => mem[18][5].ACLR
rst_ni => mem[18][6].ACLR
rst_ni => mem[18][7].ACLR
rst_ni => mem[17][0].ACLR
rst_ni => mem[17][1].ACLR
rst_ni => mem[17][2].ACLR
rst_ni => mem[17][3].ACLR
rst_ni => mem[17][4].ACLR
rst_ni => mem[17][5].ACLR
rst_ni => mem[17][6].ACLR
rst_ni => mem[17][7].ACLR
rst_ni => mem[16][0].ACLR
rst_ni => mem[16][1].ACLR
rst_ni => mem[16][2].ACLR
rst_ni => mem[16][3].ACLR
rst_ni => mem[16][4].ACLR
rst_ni => mem[16][5].ACLR
rst_ni => mem[16][6].ACLR
rst_ni => mem[16][7].ACLR
rst_ni => mem[15][0].ACLR
rst_ni => mem[15][1].ACLR
rst_ni => mem[15][2].ACLR
rst_ni => mem[15][3].ACLR
rst_ni => mem[15][4].ACLR
rst_ni => mem[15][5].ACLR
rst_ni => mem[15][6].ACLR
rst_ni => mem[15][7].ACLR
rst_ni => mem[14][0].ACLR
rst_ni => mem[14][1].ACLR
rst_ni => mem[14][2].ACLR
rst_ni => mem[14][3].ACLR
rst_ni => mem[14][4].ACLR
rst_ni => mem[14][5].ACLR
rst_ni => mem[14][6].ACLR
rst_ni => mem[14][7].ACLR
rst_ni => mem[13][0].ACLR
rst_ni => mem[13][1].ACLR
rst_ni => mem[13][2].ACLR
rst_ni => mem[13][3].ACLR
rst_ni => mem[13][4].ACLR
rst_ni => mem[13][5].ACLR
rst_ni => mem[13][6].ACLR
rst_ni => mem[13][7].ACLR
rst_ni => mem[12][0].ACLR
rst_ni => mem[12][1].ACLR
rst_ni => mem[12][2].ACLR
rst_ni => mem[12][3].ACLR
rst_ni => mem[12][4].ACLR
rst_ni => mem[12][5].ACLR
rst_ni => mem[12][6].ACLR
rst_ni => mem[12][7].ACLR
rst_ni => mem[11][0].ACLR
rst_ni => mem[11][1].ACLR
rst_ni => mem[11][2].ACLR
rst_ni => mem[11][3].ACLR
rst_ni => mem[11][4].ACLR
rst_ni => mem[11][5].ACLR
rst_ni => mem[11][6].ACLR
rst_ni => mem[11][7].ACLR
rst_ni => mem[10][0].ACLR
rst_ni => mem[10][1].ACLR
rst_ni => mem[10][2].ACLR
rst_ni => mem[10][3].ACLR
rst_ni => mem[10][4].ACLR
rst_ni => mem[10][5].ACLR
rst_ni => mem[10][6].ACLR
rst_ni => mem[10][7].ACLR
rst_ni => mem[9][0].ACLR
rst_ni => mem[9][1].ACLR
rst_ni => mem[9][2].ACLR
rst_ni => mem[9][3].ACLR
rst_ni => mem[9][4].ACLR
rst_ni => mem[9][5].ACLR
rst_ni => mem[9][6].ACLR
rst_ni => mem[9][7].ACLR
rst_ni => mem[8][0].ACLR
rst_ni => mem[8][1].ACLR
rst_ni => mem[8][2].ACLR
rst_ni => mem[8][3].ACLR
rst_ni => mem[8][4].ACLR
rst_ni => mem[8][5].ACLR
rst_ni => mem[8][6].ACLR
rst_ni => mem[8][7].ACLR
rst_ni => mem[7][0].ACLR
rst_ni => mem[7][1].ACLR
rst_ni => mem[7][2].ACLR
rst_ni => mem[7][3].ACLR
rst_ni => mem[7][4].ACLR
rst_ni => mem[7][5].ACLR
rst_ni => mem[7][6].ACLR
rst_ni => mem[7][7].ACLR
rst_ni => mem[6][0].ACLR
rst_ni => mem[6][1].ACLR
rst_ni => mem[6][2].ACLR
rst_ni => mem[6][3].ACLR
rst_ni => mem[6][4].ACLR
rst_ni => mem[6][5].ACLR
rst_ni => mem[6][6].ACLR
rst_ni => mem[6][7].ACLR
rst_ni => mem[5][0].ACLR
rst_ni => mem[5][1].ACLR
rst_ni => mem[5][2].ACLR
rst_ni => mem[5][3].ACLR
rst_ni => mem[5][4].ACLR
rst_ni => mem[5][5].ACLR
rst_ni => mem[5][6].ACLR
rst_ni => mem[5][7].ACLR
rst_ni => mem[4][0].ACLR
rst_ni => mem[4][1].ACLR
rst_ni => mem[4][2].ACLR
rst_ni => mem[4][3].ACLR
rst_ni => mem[4][4].ACLR
rst_ni => mem[4][5].ACLR
rst_ni => mem[4][6].ACLR
rst_ni => mem[4][7].ACLR
rst_ni => mem[3][0].ACLR
rst_ni => mem[3][1].ACLR
rst_ni => mem[3][2].ACLR
rst_ni => mem[3][3].ACLR
rst_ni => mem[3][4].ACLR
rst_ni => mem[3][5].ACLR
rst_ni => mem[3][6].ACLR
rst_ni => mem[3][7].ACLR
rst_ni => mem[2][0].ACLR
rst_ni => mem[2][1].ACLR
rst_ni => mem[2][2].ACLR
rst_ni => mem[2][3].ACLR
rst_ni => mem[2][4].ACLR
rst_ni => mem[2][5].ACLR
rst_ni => mem[2][6].ACLR
rst_ni => mem[2][7].ACLR
rst_ni => mem[1][0].ACLR
rst_ni => mem[1][1].ACLR
rst_ni => mem[1][2].ACLR
rst_ni => mem[1][3].ACLR
rst_ni => mem[1][4].ACLR
rst_ni => mem[1][5].ACLR
rst_ni => mem[1][6].ACLR
rst_ni => mem[1][7].ACLR
rst_ni => mem[0][0].ACLR
rst_ni => mem[0][1].ACLR
rst_ni => mem[0][2].ACLR
rst_ni => mem[0][3].ACLR
rst_ni => mem[0][4].ACLR
rst_ni => mem[0][5].ACLR
rst_ni => mem[0][6].ACLR
rst_ni => mem[0][7].ACLR
rst_ni => ptr_addr_wr_o[0]~reg0.ACLR
rst_ni => ptr_addr_wr_o[1]~reg0.ACLR
rst_ni => ptr_addr_wr_o[2]~reg0.ACLR
rst_ni => ptr_addr_wr_o[3]~reg0.ACLR
rst_ni => ptr_addr_wr_o[4]~reg0.ACLR
rst_ni => wr_data_o[0]~reg0.ACLR
rst_ni => wr_data_o[1]~reg0.ACLR
rst_ni => wr_data_o[2]~reg0.ACLR
rst_ni => wr_data_o[3]~reg0.ACLR
rst_ni => wr_data_o[4]~reg0.ACLR
rst_ni => wr_data_o[5]~reg0.ACLR
rst_ni => wr_data_o[6]~reg0.ACLR
rst_ni => wr_data_o[7]~reg0.ACLR
wr_data[0] => wr_data_o.DATAA
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[0] => mem.DATAB
wr_data[1] => wr_data_o.DATAA
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[1] => mem.DATAB
wr_data[2] => wr_data_o.DATAA
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[2] => mem.DATAB
wr_data[3] => wr_data_o.DATAA
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[3] => mem.DATAB
wr_data[4] => wr_data_o.DATAA
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[4] => mem.DATAB
wr_data[5] => wr_data_o.DATAA
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[5] => mem.DATAB
wr_data[6] => wr_data_o.DATAA
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[6] => mem.DATAB
wr_data[7] => wr_data_o.DATAA
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
wr_data[7] => mem.DATAB
fifo_en => always0.IN0
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => mem.OUTPUTSELECT
fifo_en => ptr_addr_wr_i.OUTPUTSELECT
fifo_en => ptr_addr_wr_i.OUTPUTSELECT
fifo_en => ptr_addr_wr_i.OUTPUTSELECT
fifo_en => ptr_addr_wr_i.OUTPUTSELECT
fifo_en => ptr_addr_wr_i.OUTPUTSELECT
ctrl_tx_buffer => ptr_addr_wr_o.OUTPUTSELECT
ctrl_tx_buffer => ptr_addr_wr_o.OUTPUTSELECT
ctrl_tx_buffer => ptr_addr_wr_o.OUTPUTSELECT
ctrl_tx_buffer => ptr_addr_wr_o.OUTPUTSELECT
ctrl_tx_buffer => ptr_addr_wr_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
ctrl_tx_buffer => wr_data_o.OUTPUTSELECT
done_tx => ~NO_FANOUT~
TXen => always0.IN1
TXen => ptr_addr_wr_i[0]~reg0.ENA
TXen => mem[0][7].ENA
TXen => mem[0][6].ENA
TXen => mem[0][5].ENA
TXen => mem[0][4].ENA
TXen => mem[0][3].ENA
TXen => mem[0][2].ENA
TXen => mem[0][1].ENA
TXen => mem[0][0].ENA
TXen => mem[1][7].ENA
TXen => mem[1][6].ENA
TXen => mem[1][5].ENA
TXen => mem[1][4].ENA
TXen => mem[1][3].ENA
TXen => mem[1][2].ENA
TXen => mem[1][1].ENA
TXen => mem[1][0].ENA
TXen => mem[2][7].ENA
TXen => mem[2][6].ENA
TXen => mem[2][5].ENA
TXen => mem[2][4].ENA
TXen => mem[2][3].ENA
TXen => mem[2][2].ENA
TXen => mem[2][1].ENA
TXen => mem[2][0].ENA
TXen => mem[3][7].ENA
TXen => mem[3][6].ENA
TXen => mem[3][5].ENA
TXen => mem[3][4].ENA
TXen => mem[3][3].ENA
TXen => mem[3][2].ENA
TXen => mem[3][1].ENA
TXen => mem[3][0].ENA
TXen => mem[4][7].ENA
TXen => mem[4][6].ENA
TXen => mem[4][5].ENA
TXen => mem[4][4].ENA
TXen => mem[4][3].ENA
TXen => mem[4][2].ENA
TXen => mem[4][1].ENA
TXen => mem[4][0].ENA
TXen => mem[5][7].ENA
TXen => mem[5][6].ENA
TXen => mem[5][5].ENA
TXen => mem[5][4].ENA
TXen => mem[5][3].ENA
TXen => mem[5][2].ENA
TXen => mem[5][1].ENA
TXen => mem[5][0].ENA
TXen => mem[6][7].ENA
TXen => mem[6][6].ENA
TXen => mem[6][5].ENA
TXen => mem[6][4].ENA
TXen => mem[6][3].ENA
TXen => mem[6][2].ENA
TXen => mem[6][1].ENA
TXen => mem[6][0].ENA
TXen => mem[7][7].ENA
TXen => mem[7][6].ENA
TXen => mem[7][5].ENA
TXen => mem[7][4].ENA
TXen => mem[7][3].ENA
TXen => mem[7][2].ENA
TXen => mem[7][1].ENA
TXen => mem[7][0].ENA
TXen => mem[8][7].ENA
TXen => mem[8][6].ENA
TXen => mem[8][5].ENA
TXen => mem[8][4].ENA
TXen => mem[8][3].ENA
TXen => mem[8][2].ENA
TXen => mem[8][1].ENA
TXen => mem[8][0].ENA
TXen => mem[9][7].ENA
TXen => mem[9][6].ENA
TXen => mem[9][5].ENA
TXen => mem[9][4].ENA
TXen => mem[9][3].ENA
TXen => mem[9][2].ENA
TXen => mem[9][1].ENA
TXen => mem[9][0].ENA
TXen => mem[10][7].ENA
TXen => mem[10][6].ENA
TXen => mem[10][5].ENA
TXen => mem[10][4].ENA
TXen => mem[10][3].ENA
TXen => mem[10][2].ENA
TXen => mem[10][1].ENA
TXen => mem[10][0].ENA
TXen => mem[11][7].ENA
TXen => mem[11][6].ENA
TXen => mem[11][5].ENA
TXen => mem[11][4].ENA
TXen => mem[11][3].ENA
TXen => mem[11][2].ENA
TXen => mem[11][1].ENA
TXen => mem[11][0].ENA
TXen => mem[12][7].ENA
TXen => mem[12][6].ENA
TXen => mem[12][5].ENA
TXen => mem[12][4].ENA
TXen => mem[12][3].ENA
TXen => mem[12][2].ENA
TXen => mem[12][1].ENA
TXen => mem[12][0].ENA
TXen => mem[13][7].ENA
TXen => mem[13][6].ENA
TXen => mem[13][5].ENA
TXen => mem[13][4].ENA
TXen => mem[13][3].ENA
TXen => mem[13][2].ENA
TXen => mem[13][1].ENA
TXen => mem[13][0].ENA
TXen => mem[14][7].ENA
TXen => mem[14][6].ENA
TXen => mem[14][5].ENA
TXen => mem[14][4].ENA
TXen => mem[14][3].ENA
TXen => mem[14][2].ENA
TXen => mem[14][1].ENA
TXen => mem[14][0].ENA
TXen => mem[15][7].ENA
TXen => mem[15][6].ENA
TXen => mem[15][5].ENA
TXen => mem[15][4].ENA
TXen => mem[15][3].ENA
TXen => mem[15][2].ENA
TXen => mem[15][1].ENA
TXen => mem[15][0].ENA
TXen => mem[16][7].ENA
TXen => mem[16][6].ENA
TXen => mem[16][5].ENA
TXen => mem[16][4].ENA
TXen => mem[16][3].ENA
TXen => mem[16][2].ENA
TXen => mem[16][1].ENA
TXen => mem[16][0].ENA
TXen => mem[17][7].ENA
TXen => mem[17][6].ENA
TXen => mem[17][5].ENA
TXen => mem[17][4].ENA
TXen => mem[17][3].ENA
TXen => mem[17][2].ENA
TXen => mem[17][1].ENA
TXen => mem[17][0].ENA
TXen => mem[18][7].ENA
TXen => mem[18][6].ENA
TXen => mem[18][5].ENA
TXen => mem[18][4].ENA
TXen => mem[18][3].ENA
TXen => mem[18][2].ENA
TXen => mem[18][1].ENA
TXen => mem[18][0].ENA
TXen => mem[19][7].ENA
TXen => mem[19][6].ENA
TXen => mem[19][5].ENA
TXen => mem[19][4].ENA
TXen => mem[19][3].ENA
TXen => mem[19][2].ENA
TXen => mem[19][1].ENA
TXen => mem[19][0].ENA
TXen => mem[20][7].ENA
TXen => mem[20][6].ENA
TXen => mem[20][5].ENA
TXen => mem[20][4].ENA
TXen => mem[20][3].ENA
TXen => mem[20][2].ENA
TXen => mem[20][1].ENA
TXen => mem[20][0].ENA
TXen => mem[21][7].ENA
TXen => mem[21][6].ENA
TXen => mem[21][5].ENA
TXen => mem[21][4].ENA
TXen => mem[21][3].ENA
TXen => mem[21][2].ENA
TXen => mem[21][1].ENA
TXen => mem[21][0].ENA
TXen => mem[22][7].ENA
TXen => mem[22][6].ENA
TXen => mem[22][5].ENA
TXen => mem[22][4].ENA
TXen => mem[22][3].ENA
TXen => mem[22][2].ENA
TXen => mem[22][1].ENA
TXen => mem[22][0].ENA
TXen => mem[23][7].ENA
TXen => mem[23][6].ENA
TXen => mem[23][5].ENA
TXen => mem[23][4].ENA
TXen => mem[23][3].ENA
TXen => mem[23][2].ENA
TXen => mem[23][1].ENA
TXen => mem[23][0].ENA
TXen => mem[24][7].ENA
TXen => mem[24][6].ENA
TXen => mem[24][5].ENA
TXen => mem[24][4].ENA
TXen => mem[24][3].ENA
TXen => mem[24][2].ENA
TXen => mem[24][1].ENA
TXen => mem[24][0].ENA
TXen => mem[25][7].ENA
TXen => mem[25][6].ENA
TXen => mem[25][5].ENA
TXen => mem[25][4].ENA
TXen => mem[25][3].ENA
TXen => mem[25][2].ENA
TXen => mem[25][1].ENA
TXen => mem[25][0].ENA
TXen => mem[26][7].ENA
TXen => mem[26][6].ENA
TXen => mem[26][5].ENA
TXen => mem[26][4].ENA
TXen => mem[26][3].ENA
TXen => mem[26][2].ENA
TXen => mem[26][1].ENA
TXen => mem[26][0].ENA
TXen => mem[27][7].ENA
TXen => mem[27][6].ENA
TXen => mem[27][5].ENA
TXen => mem[27][4].ENA
TXen => mem[27][3].ENA
TXen => mem[27][2].ENA
TXen => mem[27][1].ENA
TXen => mem[27][0].ENA
TXen => mem[28][7].ENA
TXen => mem[28][6].ENA
TXen => mem[28][5].ENA
TXen => mem[28][4].ENA
TXen => mem[28][3].ENA
TXen => mem[28][2].ENA
TXen => mem[28][1].ENA
TXen => mem[28][0].ENA
TXen => mem[29][7].ENA
TXen => mem[29][6].ENA
TXen => mem[29][5].ENA
TXen => mem[29][4].ENA
TXen => mem[29][3].ENA
TXen => mem[29][2].ENA
TXen => mem[29][1].ENA
TXen => mem[29][0].ENA
TXen => mem[30][7].ENA
TXen => mem[30][6].ENA
TXen => mem[30][5].ENA
TXen => mem[30][4].ENA
TXen => mem[30][3].ENA
TXen => mem[30][2].ENA
TXen => mem[30][1].ENA
TXen => mem[30][0].ENA
TXen => mem[31][7].ENA
TXen => mem[31][6].ENA
TXen => mem[31][5].ENA
TXen => mem[31][4].ENA
TXen => mem[31][3].ENA
TXen => mem[31][2].ENA
TXen => mem[31][1].ENA
TXen => mem[31][0].ENA
TXen => ptr_addr_wr_i[4]~reg0.ENA
TXen => ptr_addr_wr_i[3]~reg0.ENA
TXen => ptr_addr_wr_i[2]~reg0.ENA
TXen => ptr_addr_wr_i[1]~reg0.ENA
tx_buffer_overrun => ~NO_FANOUT~
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
rx_state_full => mem.OUTPUTSELECT
ptr_addr_wr_i[0] <= ptr_addr_wr_i[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_i[1] <= ptr_addr_wr_i[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_i[2] <= ptr_addr_wr_i[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_i[3] <= ptr_addr_wr_i[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_i[4] <= ptr_addr_wr_i[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_o[0] <= ptr_addr_wr_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_o[1] <= ptr_addr_wr_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_o[2] <= ptr_addr_wr_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_o[3] <= ptr_addr_wr_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ptr_addr_wr_o[4] <= ptr_addr_wr_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[0] <= wr_data_o[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[1] <= wr_data_o[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[2] <= wr_data_o[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[3] <= wr_data_o[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[4] <= wr_data_o[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[5] <= wr_data_o[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[6] <= wr_data_o[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
wr_data_o[7] <= wr_data_o[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|uart_start_bit_detect:UART_START_BIT_DETECT_BLOCK
clk_i => done_flag.CLK
clk_i => bit_count[0].CLK
clk_i => bit_count[1].CLK
clk_i => bit_count[2].CLK
clk_i => bit_count[3].CLK
clk_i => shift_reg[0].CLK
clk_i => shift_reg[1].CLK
clk_i => shift_reg[2].CLK
clk_i => shift_reg[3].CLK
clk_i => shift_reg[4].CLK
clk_i => shift_reg[5].CLK
clk_i => shift_reg[6].CLK
clk_i => shift_reg[7].CLK
clk_i => shift_reg[8].CLK
clk_i => shift_reg[9].CLK
clk_i => shift_reg[10].CLK
clk_i => shift_reg[11].CLK
clk_i => sampling.CLK
clk_i => start_bit_detected.CLK
clk_i => prev_rx.CLK
rst_ni => done_flag.ACLR
rst_ni => bit_count[0].ACLR
rst_ni => bit_count[1].ACLR
rst_ni => bit_count[2].ACLR
rst_ni => bit_count[3].ACLR
rst_ni => shift_reg[0].ACLR
rst_ni => shift_reg[1].ACLR
rst_ni => shift_reg[2].ACLR
rst_ni => shift_reg[3].ACLR
rst_ni => shift_reg[4].ACLR
rst_ni => shift_reg[5].ACLR
rst_ni => shift_reg[6].ACLR
rst_ni => shift_reg[7].ACLR
rst_ni => shift_reg[8].ACLR
rst_ni => shift_reg[9].ACLR
rst_ni => shift_reg[10].ACLR
rst_ni => shift_reg[11].ACLR
rst_ni => sampling.ACLR
rst_ni => start_bit_detected.ACLR
rst_ni => prev_rx.PRESET
UART_RXD => prev_rx.DATAB
UART_RXD => always3.IN1
parity_bit_mode => Decoder0.IN1
stop_bit_twice => Decoder0.IN0
number_data_receive[0] => Mux0.IN19
number_data_receive[0] => Mux1.IN19
number_data_receive[0] => Mux2.IN19
number_data_receive[0] => Mux3.IN19
number_data_receive[1] => Mux0.IN18
number_data_receive[1] => Mux1.IN18
number_data_receive[1] => Mux2.IN18
number_data_receive[1] => Mux3.IN18
number_data_receive[2] => Mux0.IN17
number_data_receive[2] => Mux1.IN17
number_data_receive[2] => Mux2.IN17
number_data_receive[2] => Mux3.IN17
number_data_receive[3] => Mux0.IN16
number_data_receive[3] => Mux1.IN16
number_data_receive[3] => Mux2.IN16
number_data_receive[3] => Mux3.IN16
RXen => prev_rx.ENA
RXen => start_bit_detected.ENA
RXen => sampling.ENA
cd[0] => ~NO_FANOUT~
cd[1] => ~NO_FANOUT~
cd[2] => ~NO_FANOUT~
cd[3] => ~NO_FANOUT~
cd[4] => ~NO_FANOUT~
cd[5] => ~NO_FANOUT~
cd[6] => ~NO_FANOUT~
cd[7] => ~NO_FANOUT~
cd[8] => ~NO_FANOUT~
cd[9] => ~NO_FANOUT~
cd[10] => ~NO_FANOUT~
cd[11] => ~NO_FANOUT~
cd[12] => ~NO_FANOUT~
uart_mode_clk_sel => ~NO_FANOUT~
fifo_wr_ctrl <= fifo_wr_ctrl.DB_MAX_OUTPUT_PORT_TYPE
data_out[0] <= data_out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_out[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_out[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_out[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_out[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_out[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_out[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[8] <= data_out[8]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[9] <= data_out[9]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[10] <= data_out[10]$latch.DB_MAX_OUTPUT_PORT_TYPE
data_out[11] <= data_out[11]$latch.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|receive_FIFO:RECEIVE_FIFO_BLOCK
clk => rdcnt[0].CLK
clk => rdcnt[1].CLK
clk => rdcnt[2].CLK
clk => rdcnt[3].CLK
clk => rdcnt[4].CLK
clk => fifo_len[0].CLK
clk => fifo_len[1].CLK
clk => fifo_len[2].CLK
clk => fifo_len[3].CLK
clk => fifo_len[4].CLK
clk => fifo_len[5].CLK
clk => wrcnt[0].CLK
clk => wrcnt[1].CLK
clk => wrcnt[2].CLK
clk => wrcnt[3].CLK
clk => wrcnt[4].CLK
rst_n => fifo_len[0].ACLR
rst_n => fifo_len[1].ACLR
rst_n => fifo_len[2].ACLR
rst_n => fifo_len[3].ACLR
rst_n => fifo_len[4].ACLR
rst_n => fifo_len[5].ACLR
rst_n => wrcnt[0].ACLR
rst_n => wrcnt[1].ACLR
rst_n => wrcnt[2].ACLR
rst_n => wrcnt[3].ACLR
rst_n => wrcnt[4].ACLR
rst_n => rdcnt[0].ACLR
rst_n => rdcnt[1].ACLR
rst_n => rdcnt[2].ACLR
rst_n => rdcnt[3].ACLR
rst_n => rdcnt[4].ACLR
fiford => read.IN1
fifowr => write.IN0
RXdone => rdcnt.OUTPUTSELECT
RXdone => rdcnt.OUTPUTSELECT
RXdone => rdcnt.OUTPUTSELECT
RXdone => rdcnt.OUTPUTSELECT
RXdone => rdcnt.OUTPUTSELECT
fifofull <= fifolen[5].DB_MAX_OUTPUT_PORT_TYPE
notempty <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
write <= write.DB_MAX_OUTPUT_PORT_TYPE
read <= read.DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_wr_i[0] <= wrcnt[0].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_wr_i[1] <= wrcnt[1].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_wr_i[2] <= wrcnt[2].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_wr_i[3] <= wrcnt[3].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_wr_i[4] <= wrcnt[4].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_rd_o[0] <= rx_ptr_addr_rd_o[0].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_rd_o[1] <= rx_ptr_addr_rd_o[1].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_rd_o[2] <= rx_ptr_addr_rd_o[2].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_rd_o[3] <= rx_ptr_addr_rd_o[3].DB_MAX_OUTPUT_PORT_TYPE
rx_ptr_addr_rd_o[4] <= rx_ptr_addr_rd_o[4].DB_MAX_OUTPUT_PORT_TYPE
data_is_ready <= data_is_ready.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|receive_FIFO:RECEIVE_FIFO_BLOCK|compare_5bit:COMPARE_5BITS_BLOCK
A[0] => xor_result[0].IN0
A[0] => LessThan5.IN1
A[1] => xor_result[1].IN0
A[1] => LessThan4.IN1
A[2] => xor_result[2].IN0
A[2] => LessThan3.IN1
A[3] => xor_result[3].IN0
A[3] => LessThan2.IN1
A[4] => xor_result[4].IN0
A[4] => LessThan1.IN1
A[5] => xor_result[5].IN0
A[5] => LessThan0.IN1
B[0] => xor_result[0].IN1
B[0] => LessThan5.IN2
B[1] => xor_result[1].IN1
B[1] => LessThan4.IN2
B[2] => xor_result[2].IN1
B[2] => LessThan3.IN2
B[3] => xor_result[3].IN1
B[3] => LessThan2.IN2
B[4] => xor_result[4].IN1
B[4] => LessThan1.IN2
B[5] => xor_result[5].IN1
B[5] => LessThan0.IN2
A_less_B <= result.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|D_FF_12bit:D_FLIPFLOP_12BITS_FOR_TEMP_STORE
rst_ni => Q[0]~reg0.ACLR
rst_ni => Q[1]~reg0.ACLR
rst_ni => Q[2]~reg0.ACLR
rst_ni => Q[3]~reg0.ACLR
rst_ni => Q[4]~reg0.ACLR
rst_ni => Q[5]~reg0.ACLR
rst_ni => Q[6]~reg0.ACLR
rst_ni => Q[7]~reg0.ACLR
rst_ni => Q[8]~reg0.ACLR
rst_ni => Q[9]~reg0.ACLR
rst_ni => Q[10]~reg0.ACLR
rst_ni => Q[11]~reg0.ACLR
baud_tick => Q[0]~reg0.CLK
baud_tick => Q[1]~reg0.CLK
baud_tick => Q[2]~reg0.CLK
baud_tick => Q[3]~reg0.CLK
baud_tick => Q[4]~reg0.CLK
baud_tick => Q[5]~reg0.CLK
baud_tick => Q[6]~reg0.CLK
baud_tick => Q[7]~reg0.CLK
baud_tick => Q[8]~reg0.CLK
baud_tick => Q[9]~reg0.CLK
baud_tick => Q[10]~reg0.CLK
baud_tick => Q[11]~reg0.CLK
enable => Q[0]~reg0.ENA
enable => Q[11]~reg0.ENA
enable => Q[10]~reg0.ENA
enable => Q[9]~reg0.ENA
enable => Q[8]~reg0.ENA
enable => Q[7]~reg0.ENA
enable => Q[6]~reg0.ENA
enable => Q[5]~reg0.ENA
enable => Q[4]~reg0.ENA
enable => Q[3]~reg0.ENA
enable => Q[2]~reg0.ENA
enable => Q[1]~reg0.ENA
D[0] => Q[0]~reg0.DATAIN
D[1] => Q[1]~reg0.DATAIN
D[2] => Q[2]~reg0.DATAIN
D[3] => Q[3]~reg0.DATAIN
D[4] => Q[4]~reg0.DATAIN
D[5] => Q[5]~reg0.DATAIN
D[6] => Q[6]~reg0.DATAIN
D[7] => Q[7]~reg0.DATAIN
D[8] => Q[8]~reg0.DATAIN
D[9] => Q[9]~reg0.DATAIN
D[10] => Q[10]~reg0.DATAIN
D[11] => Q[11]~reg0.DATAIN
Q[0] <= Q[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= Q[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= Q[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= Q[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= Q[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= Q[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= Q[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= Q[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[8] <= Q[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[9] <= Q[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[10] <= Q[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Q[11] <= Q[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|fifo_read_memory:FIFO_READ_MEMORY_BLOCK
clk => temp_read[0].CLK
clk => temp_read[1].CLK
clk => temp_read[2].CLK
clk => temp_read[3].CLK
clk => temp_read[4].CLK
clk => temp_read[5].CLK
clk => temp_read[6].CLK
clk => temp_read[7].CLK
clk => temp_read[8].CLK
clk => temp_read[9].CLK
clk => temp_read[10].CLK
clk => temp_read[11].CLK
clk => memory[31][0].CLK
clk => memory[31][1].CLK
clk => memory[31][2].CLK
clk => memory[31][3].CLK
clk => memory[31][4].CLK
clk => memory[31][5].CLK
clk => memory[31][6].CLK
clk => memory[31][7].CLK
clk => memory[31][8].CLK
clk => memory[31][9].CLK
clk => memory[31][10].CLK
clk => memory[31][11].CLK
clk => memory[30][0].CLK
clk => memory[30][1].CLK
clk => memory[30][2].CLK
clk => memory[30][3].CLK
clk => memory[30][4].CLK
clk => memory[30][5].CLK
clk => memory[30][6].CLK
clk => memory[30][7].CLK
clk => memory[30][8].CLK
clk => memory[30][9].CLK
clk => memory[30][10].CLK
clk => memory[30][11].CLK
clk => memory[29][0].CLK
clk => memory[29][1].CLK
clk => memory[29][2].CLK
clk => memory[29][3].CLK
clk => memory[29][4].CLK
clk => memory[29][5].CLK
clk => memory[29][6].CLK
clk => memory[29][7].CLK
clk => memory[29][8].CLK
clk => memory[29][9].CLK
clk => memory[29][10].CLK
clk => memory[29][11].CLK
clk => memory[28][0].CLK
clk => memory[28][1].CLK
clk => memory[28][2].CLK
clk => memory[28][3].CLK
clk => memory[28][4].CLK
clk => memory[28][5].CLK
clk => memory[28][6].CLK
clk => memory[28][7].CLK
clk => memory[28][8].CLK
clk => memory[28][9].CLK
clk => memory[28][10].CLK
clk => memory[28][11].CLK
clk => memory[27][0].CLK
clk => memory[27][1].CLK
clk => memory[27][2].CLK
clk => memory[27][3].CLK
clk => memory[27][4].CLK
clk => memory[27][5].CLK
clk => memory[27][6].CLK
clk => memory[27][7].CLK
clk => memory[27][8].CLK
clk => memory[27][9].CLK
clk => memory[27][10].CLK
clk => memory[27][11].CLK
clk => memory[26][0].CLK
clk => memory[26][1].CLK
clk => memory[26][2].CLK
clk => memory[26][3].CLK
clk => memory[26][4].CLK
clk => memory[26][5].CLK
clk => memory[26][6].CLK
clk => memory[26][7].CLK
clk => memory[26][8].CLK
clk => memory[26][9].CLK
clk => memory[26][10].CLK
clk => memory[26][11].CLK
clk => memory[25][0].CLK
clk => memory[25][1].CLK
clk => memory[25][2].CLK
clk => memory[25][3].CLK
clk => memory[25][4].CLK
clk => memory[25][5].CLK
clk => memory[25][6].CLK
clk => memory[25][7].CLK
clk => memory[25][8].CLK
clk => memory[25][9].CLK
clk => memory[25][10].CLK
clk => memory[25][11].CLK
clk => memory[24][0].CLK
clk => memory[24][1].CLK
clk => memory[24][2].CLK
clk => memory[24][3].CLK
clk => memory[24][4].CLK
clk => memory[24][5].CLK
clk => memory[24][6].CLK
clk => memory[24][7].CLK
clk => memory[24][8].CLK
clk => memory[24][9].CLK
clk => memory[24][10].CLK
clk => memory[24][11].CLK
clk => memory[23][0].CLK
clk => memory[23][1].CLK
clk => memory[23][2].CLK
clk => memory[23][3].CLK
clk => memory[23][4].CLK
clk => memory[23][5].CLK
clk => memory[23][6].CLK
clk => memory[23][7].CLK
clk => memory[23][8].CLK
clk => memory[23][9].CLK
clk => memory[23][10].CLK
clk => memory[23][11].CLK
clk => memory[22][0].CLK
clk => memory[22][1].CLK
clk => memory[22][2].CLK
clk => memory[22][3].CLK
clk => memory[22][4].CLK
clk => memory[22][5].CLK
clk => memory[22][6].CLK
clk => memory[22][7].CLK
clk => memory[22][8].CLK
clk => memory[22][9].CLK
clk => memory[22][10].CLK
clk => memory[22][11].CLK
clk => memory[21][0].CLK
clk => memory[21][1].CLK
clk => memory[21][2].CLK
clk => memory[21][3].CLK
clk => memory[21][4].CLK
clk => memory[21][5].CLK
clk => memory[21][6].CLK
clk => memory[21][7].CLK
clk => memory[21][8].CLK
clk => memory[21][9].CLK
clk => memory[21][10].CLK
clk => memory[21][11].CLK
clk => memory[20][0].CLK
clk => memory[20][1].CLK
clk => memory[20][2].CLK
clk => memory[20][3].CLK
clk => memory[20][4].CLK
clk => memory[20][5].CLK
clk => memory[20][6].CLK
clk => memory[20][7].CLK
clk => memory[20][8].CLK
clk => memory[20][9].CLK
clk => memory[20][10].CLK
clk => memory[20][11].CLK
clk => memory[19][0].CLK
clk => memory[19][1].CLK
clk => memory[19][2].CLK
clk => memory[19][3].CLK
clk => memory[19][4].CLK
clk => memory[19][5].CLK
clk => memory[19][6].CLK
clk => memory[19][7].CLK
clk => memory[19][8].CLK
clk => memory[19][9].CLK
clk => memory[19][10].CLK
clk => memory[19][11].CLK
clk => memory[18][0].CLK
clk => memory[18][1].CLK
clk => memory[18][2].CLK
clk => memory[18][3].CLK
clk => memory[18][4].CLK
clk => memory[18][5].CLK
clk => memory[18][6].CLK
clk => memory[18][7].CLK
clk => memory[18][8].CLK
clk => memory[18][9].CLK
clk => memory[18][10].CLK
clk => memory[18][11].CLK
clk => memory[17][0].CLK
clk => memory[17][1].CLK
clk => memory[17][2].CLK
clk => memory[17][3].CLK
clk => memory[17][4].CLK
clk => memory[17][5].CLK
clk => memory[17][6].CLK
clk => memory[17][7].CLK
clk => memory[17][8].CLK
clk => memory[17][9].CLK
clk => memory[17][10].CLK
clk => memory[17][11].CLK
clk => memory[16][0].CLK
clk => memory[16][1].CLK
clk => memory[16][2].CLK
clk => memory[16][3].CLK
clk => memory[16][4].CLK
clk => memory[16][5].CLK
clk => memory[16][6].CLK
clk => memory[16][7].CLK
clk => memory[16][8].CLK
clk => memory[16][9].CLK
clk => memory[16][10].CLK
clk => memory[16][11].CLK
clk => memory[15][0].CLK
clk => memory[15][1].CLK
clk => memory[15][2].CLK
clk => memory[15][3].CLK
clk => memory[15][4].CLK
clk => memory[15][5].CLK
clk => memory[15][6].CLK
clk => memory[15][7].CLK
clk => memory[15][8].CLK
clk => memory[15][9].CLK
clk => memory[15][10].CLK
clk => memory[15][11].CLK
clk => memory[14][0].CLK
clk => memory[14][1].CLK
clk => memory[14][2].CLK
clk => memory[14][3].CLK
clk => memory[14][4].CLK
clk => memory[14][5].CLK
clk => memory[14][6].CLK
clk => memory[14][7].CLK
clk => memory[14][8].CLK
clk => memory[14][9].CLK
clk => memory[14][10].CLK
clk => memory[14][11].CLK
clk => memory[13][0].CLK
clk => memory[13][1].CLK
clk => memory[13][2].CLK
clk => memory[13][3].CLK
clk => memory[13][4].CLK
clk => memory[13][5].CLK
clk => memory[13][6].CLK
clk => memory[13][7].CLK
clk => memory[13][8].CLK
clk => memory[13][9].CLK
clk => memory[13][10].CLK
clk => memory[13][11].CLK
clk => memory[12][0].CLK
clk => memory[12][1].CLK
clk => memory[12][2].CLK
clk => memory[12][3].CLK
clk => memory[12][4].CLK
clk => memory[12][5].CLK
clk => memory[12][6].CLK
clk => memory[12][7].CLK
clk => memory[12][8].CLK
clk => memory[12][9].CLK
clk => memory[12][10].CLK
clk => memory[12][11].CLK
clk => memory[11][0].CLK
clk => memory[11][1].CLK
clk => memory[11][2].CLK
clk => memory[11][3].CLK
clk => memory[11][4].CLK
clk => memory[11][5].CLK
clk => memory[11][6].CLK
clk => memory[11][7].CLK
clk => memory[11][8].CLK
clk => memory[11][9].CLK
clk => memory[11][10].CLK
clk => memory[11][11].CLK
clk => memory[10][0].CLK
clk => memory[10][1].CLK
clk => memory[10][2].CLK
clk => memory[10][3].CLK
clk => memory[10][4].CLK
clk => memory[10][5].CLK
clk => memory[10][6].CLK
clk => memory[10][7].CLK
clk => memory[10][8].CLK
clk => memory[10][9].CLK
clk => memory[10][10].CLK
clk => memory[10][11].CLK
clk => memory[9][0].CLK
clk => memory[9][1].CLK
clk => memory[9][2].CLK
clk => memory[9][3].CLK
clk => memory[9][4].CLK
clk => memory[9][5].CLK
clk => memory[9][6].CLK
clk => memory[9][7].CLK
clk => memory[9][8].CLK
clk => memory[9][9].CLK
clk => memory[9][10].CLK
clk => memory[9][11].CLK
clk => memory[8][0].CLK
clk => memory[8][1].CLK
clk => memory[8][2].CLK
clk => memory[8][3].CLK
clk => memory[8][4].CLK
clk => memory[8][5].CLK
clk => memory[8][6].CLK
clk => memory[8][7].CLK
clk => memory[8][8].CLK
clk => memory[8][9].CLK
clk => memory[8][10].CLK
clk => memory[8][11].CLK
clk => memory[7][0].CLK
clk => memory[7][1].CLK
clk => memory[7][2].CLK
clk => memory[7][3].CLK
clk => memory[7][4].CLK
clk => memory[7][5].CLK
clk => memory[7][6].CLK
clk => memory[7][7].CLK
clk => memory[7][8].CLK
clk => memory[7][9].CLK
clk => memory[7][10].CLK
clk => memory[7][11].CLK
clk => memory[6][0].CLK
clk => memory[6][1].CLK
clk => memory[6][2].CLK
clk => memory[6][3].CLK
clk => memory[6][4].CLK
clk => memory[6][5].CLK
clk => memory[6][6].CLK
clk => memory[6][7].CLK
clk => memory[6][8].CLK
clk => memory[6][9].CLK
clk => memory[6][10].CLK
clk => memory[6][11].CLK
clk => memory[5][0].CLK
clk => memory[5][1].CLK
clk => memory[5][2].CLK
clk => memory[5][3].CLK
clk => memory[5][4].CLK
clk => memory[5][5].CLK
clk => memory[5][6].CLK
clk => memory[5][7].CLK
clk => memory[5][8].CLK
clk => memory[5][9].CLK
clk => memory[5][10].CLK
clk => memory[5][11].CLK
clk => memory[4][0].CLK
clk => memory[4][1].CLK
clk => memory[4][2].CLK
clk => memory[4][3].CLK
clk => memory[4][4].CLK
clk => memory[4][5].CLK
clk => memory[4][6].CLK
clk => memory[4][7].CLK
clk => memory[4][8].CLK
clk => memory[4][9].CLK
clk => memory[4][10].CLK
clk => memory[4][11].CLK
clk => memory[3][0].CLK
clk => memory[3][1].CLK
clk => memory[3][2].CLK
clk => memory[3][3].CLK
clk => memory[3][4].CLK
clk => memory[3][5].CLK
clk => memory[3][6].CLK
clk => memory[3][7].CLK
clk => memory[3][8].CLK
clk => memory[3][9].CLK
clk => memory[3][10].CLK
clk => memory[3][11].CLK
clk => memory[2][0].CLK
clk => memory[2][1].CLK
clk => memory[2][2].CLK
clk => memory[2][3].CLK
clk => memory[2][4].CLK
clk => memory[2][5].CLK
clk => memory[2][6].CLK
clk => memory[2][7].CLK
clk => memory[2][8].CLK
clk => memory[2][9].CLK
clk => memory[2][10].CLK
clk => memory[2][11].CLK
clk => memory[1][0].CLK
clk => memory[1][1].CLK
clk => memory[1][2].CLK
clk => memory[1][3].CLK
clk => memory[1][4].CLK
clk => memory[1][5].CLK
clk => memory[1][6].CLK
clk => memory[1][7].CLK
clk => memory[1][8].CLK
clk => memory[1][9].CLK
clk => memory[1][10].CLK
clk => memory[1][11].CLK
clk => memory[0][0].CLK
clk => memory[0][1].CLK
clk => memory[0][2].CLK
clk => memory[0][3].CLK
clk => memory[0][4].CLK
clk => memory[0][5].CLK
clk => memory[0][6].CLK
clk => memory[0][7].CLK
clk => memory[0][8].CLK
clk => memory[0][9].CLK
clk => memory[0][10].CLK
clk => memory[0][11].CLK
rst_n => memory[31][0].ACLR
rst_n => memory[31][1].ACLR
rst_n => memory[31][2].ACLR
rst_n => memory[31][3].ACLR
rst_n => memory[31][4].ACLR
rst_n => memory[31][5].ACLR
rst_n => memory[31][6].ACLR
rst_n => memory[31][7].ACLR
rst_n => memory[31][8].ACLR
rst_n => memory[31][9].ACLR
rst_n => memory[31][10].ACLR
rst_n => memory[31][11].ACLR
rst_n => memory[30][0].ACLR
rst_n => memory[30][1].ACLR
rst_n => memory[30][2].ACLR
rst_n => memory[30][3].ACLR
rst_n => memory[30][4].ACLR
rst_n => memory[30][5].ACLR
rst_n => memory[30][6].ACLR
rst_n => memory[30][7].ACLR
rst_n => memory[30][8].ACLR
rst_n => memory[30][9].ACLR
rst_n => memory[30][10].ACLR
rst_n => memory[30][11].ACLR
rst_n => memory[29][0].ACLR
rst_n => memory[29][1].ACLR
rst_n => memory[29][2].ACLR
rst_n => memory[29][3].ACLR
rst_n => memory[29][4].ACLR
rst_n => memory[29][5].ACLR
rst_n => memory[29][6].ACLR
rst_n => memory[29][7].ACLR
rst_n => memory[29][8].ACLR
rst_n => memory[29][9].ACLR
rst_n => memory[29][10].ACLR
rst_n => memory[29][11].ACLR
rst_n => memory[28][0].ACLR
rst_n => memory[28][1].ACLR
rst_n => memory[28][2].ACLR
rst_n => memory[28][3].ACLR
rst_n => memory[28][4].ACLR
rst_n => memory[28][5].ACLR
rst_n => memory[28][6].ACLR
rst_n => memory[28][7].ACLR
rst_n => memory[28][8].ACLR
rst_n => memory[28][9].ACLR
rst_n => memory[28][10].ACLR
rst_n => memory[28][11].ACLR
rst_n => memory[27][0].ACLR
rst_n => memory[27][1].ACLR
rst_n => memory[27][2].ACLR
rst_n => memory[27][3].ACLR
rst_n => memory[27][4].ACLR
rst_n => memory[27][5].ACLR
rst_n => memory[27][6].ACLR
rst_n => memory[27][7].ACLR
rst_n => memory[27][8].ACLR
rst_n => memory[27][9].ACLR
rst_n => memory[27][10].ACLR
rst_n => memory[27][11].ACLR
rst_n => memory[26][0].ACLR
rst_n => memory[26][1].ACLR
rst_n => memory[26][2].ACLR
rst_n => memory[26][3].ACLR
rst_n => memory[26][4].ACLR
rst_n => memory[26][5].ACLR
rst_n => memory[26][6].ACLR
rst_n => memory[26][7].ACLR
rst_n => memory[26][8].ACLR
rst_n => memory[26][9].ACLR
rst_n => memory[26][10].ACLR
rst_n => memory[26][11].ACLR
rst_n => memory[25][0].ACLR
rst_n => memory[25][1].ACLR
rst_n => memory[25][2].ACLR
rst_n => memory[25][3].ACLR
rst_n => memory[25][4].ACLR
rst_n => memory[25][5].ACLR
rst_n => memory[25][6].ACLR
rst_n => memory[25][7].ACLR
rst_n => memory[25][8].ACLR
rst_n => memory[25][9].ACLR
rst_n => memory[25][10].ACLR
rst_n => memory[25][11].ACLR
rst_n => memory[24][0].ACLR
rst_n => memory[24][1].ACLR
rst_n => memory[24][2].ACLR
rst_n => memory[24][3].ACLR
rst_n => memory[24][4].ACLR
rst_n => memory[24][5].ACLR
rst_n => memory[24][6].ACLR
rst_n => memory[24][7].ACLR
rst_n => memory[24][8].ACLR
rst_n => memory[24][9].ACLR
rst_n => memory[24][10].ACLR
rst_n => memory[24][11].ACLR
rst_n => memory[23][0].ACLR
rst_n => memory[23][1].ACLR
rst_n => memory[23][2].ACLR
rst_n => memory[23][3].ACLR
rst_n => memory[23][4].ACLR
rst_n => memory[23][5].ACLR
rst_n => memory[23][6].ACLR
rst_n => memory[23][7].ACLR
rst_n => memory[23][8].ACLR
rst_n => memory[23][9].ACLR
rst_n => memory[23][10].ACLR
rst_n => memory[23][11].ACLR
rst_n => memory[22][0].ACLR
rst_n => memory[22][1].ACLR
rst_n => memory[22][2].ACLR
rst_n => memory[22][3].ACLR
rst_n => memory[22][4].ACLR
rst_n => memory[22][5].ACLR
rst_n => memory[22][6].ACLR
rst_n => memory[22][7].ACLR
rst_n => memory[22][8].ACLR
rst_n => memory[22][9].ACLR
rst_n => memory[22][10].ACLR
rst_n => memory[22][11].ACLR
rst_n => memory[21][0].ACLR
rst_n => memory[21][1].ACLR
rst_n => memory[21][2].ACLR
rst_n => memory[21][3].ACLR
rst_n => memory[21][4].ACLR
rst_n => memory[21][5].ACLR
rst_n => memory[21][6].ACLR
rst_n => memory[21][7].ACLR
rst_n => memory[21][8].ACLR
rst_n => memory[21][9].ACLR
rst_n => memory[21][10].ACLR
rst_n => memory[21][11].ACLR
rst_n => memory[20][0].ACLR
rst_n => memory[20][1].ACLR
rst_n => memory[20][2].ACLR
rst_n => memory[20][3].ACLR
rst_n => memory[20][4].ACLR
rst_n => memory[20][5].ACLR
rst_n => memory[20][6].ACLR
rst_n => memory[20][7].ACLR
rst_n => memory[20][8].ACLR
rst_n => memory[20][9].ACLR
rst_n => memory[20][10].ACLR
rst_n => memory[20][11].ACLR
rst_n => memory[19][0].ACLR
rst_n => memory[19][1].ACLR
rst_n => memory[19][2].ACLR
rst_n => memory[19][3].ACLR
rst_n => memory[19][4].ACLR
rst_n => memory[19][5].ACLR
rst_n => memory[19][6].ACLR
rst_n => memory[19][7].ACLR
rst_n => memory[19][8].ACLR
rst_n => memory[19][9].ACLR
rst_n => memory[19][10].ACLR
rst_n => memory[19][11].ACLR
rst_n => memory[18][0].ACLR
rst_n => memory[18][1].ACLR
rst_n => memory[18][2].ACLR
rst_n => memory[18][3].ACLR
rst_n => memory[18][4].ACLR
rst_n => memory[18][5].ACLR
rst_n => memory[18][6].ACLR
rst_n => memory[18][7].ACLR
rst_n => memory[18][8].ACLR
rst_n => memory[18][9].ACLR
rst_n => memory[18][10].ACLR
rst_n => memory[18][11].ACLR
rst_n => memory[17][0].ACLR
rst_n => memory[17][1].ACLR
rst_n => memory[17][2].ACLR
rst_n => memory[17][3].ACLR
rst_n => memory[17][4].ACLR
rst_n => memory[17][5].ACLR
rst_n => memory[17][6].ACLR
rst_n => memory[17][7].ACLR
rst_n => memory[17][8].ACLR
rst_n => memory[17][9].ACLR
rst_n => memory[17][10].ACLR
rst_n => memory[17][11].ACLR
rst_n => memory[16][0].ACLR
rst_n => memory[16][1].ACLR
rst_n => memory[16][2].ACLR
rst_n => memory[16][3].ACLR
rst_n => memory[16][4].ACLR
rst_n => memory[16][5].ACLR
rst_n => memory[16][6].ACLR
rst_n => memory[16][7].ACLR
rst_n => memory[16][8].ACLR
rst_n => memory[16][9].ACLR
rst_n => memory[16][10].ACLR
rst_n => memory[16][11].ACLR
rst_n => memory[15][0].ACLR
rst_n => memory[15][1].ACLR
rst_n => memory[15][2].ACLR
rst_n => memory[15][3].ACLR
rst_n => memory[15][4].ACLR
rst_n => memory[15][5].ACLR
rst_n => memory[15][6].ACLR
rst_n => memory[15][7].ACLR
rst_n => memory[15][8].ACLR
rst_n => memory[15][9].ACLR
rst_n => memory[15][10].ACLR
rst_n => memory[15][11].ACLR
rst_n => memory[14][0].ACLR
rst_n => memory[14][1].ACLR
rst_n => memory[14][2].ACLR
rst_n => memory[14][3].ACLR
rst_n => memory[14][4].ACLR
rst_n => memory[14][5].ACLR
rst_n => memory[14][6].ACLR
rst_n => memory[14][7].ACLR
rst_n => memory[14][8].ACLR
rst_n => memory[14][9].ACLR
rst_n => memory[14][10].ACLR
rst_n => memory[14][11].ACLR
rst_n => memory[13][0].ACLR
rst_n => memory[13][1].ACLR
rst_n => memory[13][2].ACLR
rst_n => memory[13][3].ACLR
rst_n => memory[13][4].ACLR
rst_n => memory[13][5].ACLR
rst_n => memory[13][6].ACLR
rst_n => memory[13][7].ACLR
rst_n => memory[13][8].ACLR
rst_n => memory[13][9].ACLR
rst_n => memory[13][10].ACLR
rst_n => memory[13][11].ACLR
rst_n => memory[12][0].ACLR
rst_n => memory[12][1].ACLR
rst_n => memory[12][2].ACLR
rst_n => memory[12][3].ACLR
rst_n => memory[12][4].ACLR
rst_n => memory[12][5].ACLR
rst_n => memory[12][6].ACLR
rst_n => memory[12][7].ACLR
rst_n => memory[12][8].ACLR
rst_n => memory[12][9].ACLR
rst_n => memory[12][10].ACLR
rst_n => memory[12][11].ACLR
rst_n => memory[11][0].ACLR
rst_n => memory[11][1].ACLR
rst_n => memory[11][2].ACLR
rst_n => memory[11][3].ACLR
rst_n => memory[11][4].ACLR
rst_n => memory[11][5].ACLR
rst_n => memory[11][6].ACLR
rst_n => memory[11][7].ACLR
rst_n => memory[11][8].ACLR
rst_n => memory[11][9].ACLR
rst_n => memory[11][10].ACLR
rst_n => memory[11][11].ACLR
rst_n => memory[10][0].ACLR
rst_n => memory[10][1].ACLR
rst_n => memory[10][2].ACLR
rst_n => memory[10][3].ACLR
rst_n => memory[10][4].ACLR
rst_n => memory[10][5].ACLR
rst_n => memory[10][6].ACLR
rst_n => memory[10][7].ACLR
rst_n => memory[10][8].ACLR
rst_n => memory[10][9].ACLR
rst_n => memory[10][10].ACLR
rst_n => memory[10][11].ACLR
rst_n => memory[9][0].ACLR
rst_n => memory[9][1].ACLR
rst_n => memory[9][2].ACLR
rst_n => memory[9][3].ACLR
rst_n => memory[9][4].ACLR
rst_n => memory[9][5].ACLR
rst_n => memory[9][6].ACLR
rst_n => memory[9][7].ACLR
rst_n => memory[9][8].ACLR
rst_n => memory[9][9].ACLR
rst_n => memory[9][10].ACLR
rst_n => memory[9][11].ACLR
rst_n => memory[8][0].ACLR
rst_n => memory[8][1].ACLR
rst_n => memory[8][2].ACLR
rst_n => memory[8][3].ACLR
rst_n => memory[8][4].ACLR
rst_n => memory[8][5].ACLR
rst_n => memory[8][6].ACLR
rst_n => memory[8][7].ACLR
rst_n => memory[8][8].ACLR
rst_n => memory[8][9].ACLR
rst_n => memory[8][10].ACLR
rst_n => memory[8][11].ACLR
rst_n => memory[7][0].ACLR
rst_n => memory[7][1].ACLR
rst_n => memory[7][2].ACLR
rst_n => memory[7][3].ACLR
rst_n => memory[7][4].ACLR
rst_n => memory[7][5].ACLR
rst_n => memory[7][6].ACLR
rst_n => memory[7][7].ACLR
rst_n => memory[7][8].ACLR
rst_n => memory[7][9].ACLR
rst_n => memory[7][10].ACLR
rst_n => memory[7][11].ACLR
rst_n => memory[6][0].ACLR
rst_n => memory[6][1].ACLR
rst_n => memory[6][2].ACLR
rst_n => memory[6][3].ACLR
rst_n => memory[6][4].ACLR
rst_n => memory[6][5].ACLR
rst_n => memory[6][6].ACLR
rst_n => memory[6][7].ACLR
rst_n => memory[6][8].ACLR
rst_n => memory[6][9].ACLR
rst_n => memory[6][10].ACLR
rst_n => memory[6][11].ACLR
rst_n => memory[5][0].ACLR
rst_n => memory[5][1].ACLR
rst_n => memory[5][2].ACLR
rst_n => memory[5][3].ACLR
rst_n => memory[5][4].ACLR
rst_n => memory[5][5].ACLR
rst_n => memory[5][6].ACLR
rst_n => memory[5][7].ACLR
rst_n => memory[5][8].ACLR
rst_n => memory[5][9].ACLR
rst_n => memory[5][10].ACLR
rst_n => memory[5][11].ACLR
rst_n => memory[4][0].ACLR
rst_n => memory[4][1].ACLR
rst_n => memory[4][2].ACLR
rst_n => memory[4][3].ACLR
rst_n => memory[4][4].ACLR
rst_n => memory[4][5].ACLR
rst_n => memory[4][6].ACLR
rst_n => memory[4][7].ACLR
rst_n => memory[4][8].ACLR
rst_n => memory[4][9].ACLR
rst_n => memory[4][10].ACLR
rst_n => memory[4][11].ACLR
rst_n => memory[3][0].ACLR
rst_n => memory[3][1].ACLR
rst_n => memory[3][2].ACLR
rst_n => memory[3][3].ACLR
rst_n => memory[3][4].ACLR
rst_n => memory[3][5].ACLR
rst_n => memory[3][6].ACLR
rst_n => memory[3][7].ACLR
rst_n => memory[3][8].ACLR
rst_n => memory[3][9].ACLR
rst_n => memory[3][10].ACLR
rst_n => memory[3][11].ACLR
rst_n => memory[2][0].ACLR
rst_n => memory[2][1].ACLR
rst_n => memory[2][2].ACLR
rst_n => memory[2][3].ACLR
rst_n => memory[2][4].ACLR
rst_n => memory[2][5].ACLR
rst_n => memory[2][6].ACLR
rst_n => memory[2][7].ACLR
rst_n => memory[2][8].ACLR
rst_n => memory[2][9].ACLR
rst_n => memory[2][10].ACLR
rst_n => memory[2][11].ACLR
rst_n => memory[1][0].ACLR
rst_n => memory[1][1].ACLR
rst_n => memory[1][2].ACLR
rst_n => memory[1][3].ACLR
rst_n => memory[1][4].ACLR
rst_n => memory[1][5].ACLR
rst_n => memory[1][6].ACLR
rst_n => memory[1][7].ACLR
rst_n => memory[1][8].ACLR
rst_n => memory[1][9].ACLR
rst_n => memory[1][10].ACLR
rst_n => memory[1][11].ACLR
rst_n => memory[0][0].ACLR
rst_n => memory[0][1].ACLR
rst_n => memory[0][2].ACLR
rst_n => memory[0][3].ACLR
rst_n => memory[0][4].ACLR
rst_n => memory[0][5].ACLR
rst_n => memory[0][6].ACLR
rst_n => memory[0][7].ACLR
rst_n => memory[0][8].ACLR
rst_n => memory[0][9].ACLR
rst_n => memory[0][10].ACLR
rst_n => memory[0][11].ACLR
rst_n => temp_read[0].ENA
rst_n => temp_read[11].ENA
rst_n => temp_read[10].ENA
rst_n => temp_read[9].ENA
rst_n => temp_read[8].ENA
rst_n => temp_read[7].ENA
rst_n => temp_read[6].ENA
rst_n => temp_read[5].ENA
rst_n => temp_read[4].ENA
rst_n => temp_read[3].ENA
rst_n => temp_read[2].ENA
rst_n => temp_read[1].ENA
write_en => always0.IN0
read_en => always0.IN0
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => memory.DATAB
write_data[0] => temp_read.DATAA
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => memory.DATAB
write_data[1] => temp_read.DATAA
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => memory.DATAB
write_data[2] => temp_read.DATAA
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => memory.DATAB
write_data[3] => temp_read.DATAA
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => memory.DATAB
write_data[4] => temp_read.DATAA
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => memory.DATAB
write_data[5] => temp_read.DATAA
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => memory.DATAB
write_data[6] => temp_read.DATAA
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => memory.DATAB
write_data[7] => temp_read.DATAA
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => memory.DATAB
write_data[8] => temp_read.DATAA
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => memory.DATAB
write_data[9] => temp_read.DATAA
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => memory.DATAB
write_data[10] => temp_read.DATAA
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => memory.DATAB
write_data[11] => temp_read.DATAA
wraddr[0] => Decoder0.IN4
wraddr[1] => Decoder0.IN3
wraddr[2] => Decoder0.IN2
wraddr[3] => Decoder0.IN1
wraddr[4] => Decoder0.IN0
rdaddr[0] => Mux0.IN36
rdaddr[0] => Mux1.IN36
rdaddr[0] => Mux2.IN36
rdaddr[0] => Mux3.IN36
rdaddr[0] => Mux4.IN36
rdaddr[0] => Mux5.IN36
rdaddr[0] => Mux6.IN36
rdaddr[0] => Mux7.IN36
rdaddr[0] => Mux8.IN36
rdaddr[0] => Mux9.IN36
rdaddr[0] => Mux10.IN36
rdaddr[0] => Mux11.IN36
rdaddr[1] => Mux0.IN35
rdaddr[1] => Mux1.IN35
rdaddr[1] => Mux2.IN35
rdaddr[1] => Mux3.IN35
rdaddr[1] => Mux4.IN35
rdaddr[1] => Mux5.IN35
rdaddr[1] => Mux6.IN35
rdaddr[1] => Mux7.IN35
rdaddr[1] => Mux8.IN35
rdaddr[1] => Mux9.IN35
rdaddr[1] => Mux10.IN35
rdaddr[1] => Mux11.IN35
rdaddr[2] => Mux0.IN34
rdaddr[2] => Mux1.IN34
rdaddr[2] => Mux2.IN34
rdaddr[2] => Mux3.IN34
rdaddr[2] => Mux4.IN34
rdaddr[2] => Mux5.IN34
rdaddr[2] => Mux6.IN34
rdaddr[2] => Mux7.IN34
rdaddr[2] => Mux8.IN34
rdaddr[2] => Mux9.IN34
rdaddr[2] => Mux10.IN34
rdaddr[2] => Mux11.IN34
rdaddr[3] => Mux0.IN33
rdaddr[3] => Mux1.IN33
rdaddr[3] => Mux2.IN33
rdaddr[3] => Mux3.IN33
rdaddr[3] => Mux4.IN33
rdaddr[3] => Mux5.IN33
rdaddr[3] => Mux6.IN33
rdaddr[3] => Mux7.IN33
rdaddr[3] => Mux8.IN33
rdaddr[3] => Mux9.IN33
rdaddr[3] => Mux10.IN33
rdaddr[3] => Mux11.IN33
rdaddr[4] => Mux0.IN32
rdaddr[4] => Mux1.IN32
rdaddr[4] => Mux2.IN32
rdaddr[4] => Mux3.IN32
rdaddr[4] => Mux4.IN32
rdaddr[4] => Mux5.IN32
rdaddr[4] => Mux6.IN32
rdaddr[4] => Mux7.IN32
rdaddr[4] => Mux8.IN32
rdaddr[4] => Mux9.IN32
rdaddr[4] => Mux10.IN32
rdaddr[4] => Mux11.IN32
fifofull => always0.IN1
notempty => always0.IN1
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => temp_read.OUTPUTSELECT
fifo_en => memory[0][11].ENA
fifo_en => memory[0][10].ENA
fifo_en => memory[0][9].ENA
fifo_en => memory[0][8].ENA
fifo_en => memory[0][7].ENA
fifo_en => memory[0][6].ENA
fifo_en => memory[0][5].ENA
fifo_en => memory[0][4].ENA
fifo_en => memory[0][3].ENA
fifo_en => memory[0][2].ENA
fifo_en => memory[0][1].ENA
fifo_en => memory[0][0].ENA
fifo_en => memory[1][11].ENA
fifo_en => memory[1][10].ENA
fifo_en => memory[1][9].ENA
fifo_en => memory[1][8].ENA
fifo_en => memory[1][7].ENA
fifo_en => memory[1][6].ENA
fifo_en => memory[1][5].ENA
fifo_en => memory[1][4].ENA
fifo_en => memory[1][3].ENA
fifo_en => memory[1][2].ENA
fifo_en => memory[1][1].ENA
fifo_en => memory[1][0].ENA
fifo_en => memory[2][11].ENA
fifo_en => memory[2][10].ENA
fifo_en => memory[2][9].ENA
fifo_en => memory[2][8].ENA
fifo_en => memory[2][7].ENA
fifo_en => memory[2][6].ENA
fifo_en => memory[2][5].ENA
fifo_en => memory[2][4].ENA
fifo_en => memory[2][3].ENA
fifo_en => memory[2][2].ENA
fifo_en => memory[2][1].ENA
fifo_en => memory[2][0].ENA
fifo_en => memory[3][11].ENA
fifo_en => memory[3][10].ENA
fifo_en => memory[3][9].ENA
fifo_en => memory[3][8].ENA
fifo_en => memory[3][7].ENA
fifo_en => memory[3][6].ENA
fifo_en => memory[3][5].ENA
fifo_en => memory[3][4].ENA
fifo_en => memory[3][3].ENA
fifo_en => memory[3][2].ENA
fifo_en => memory[3][1].ENA
fifo_en => memory[3][0].ENA
fifo_en => memory[4][11].ENA
fifo_en => memory[4][10].ENA
fifo_en => memory[4][9].ENA
fifo_en => memory[4][8].ENA
fifo_en => memory[4][7].ENA
fifo_en => memory[4][6].ENA
fifo_en => memory[4][5].ENA
fifo_en => memory[4][4].ENA
fifo_en => memory[4][3].ENA
fifo_en => memory[4][2].ENA
fifo_en => memory[4][1].ENA
fifo_en => memory[4][0].ENA
fifo_en => memory[5][11].ENA
fifo_en => memory[5][10].ENA
fifo_en => memory[5][9].ENA
fifo_en => memory[5][8].ENA
fifo_en => memory[5][7].ENA
fifo_en => memory[5][6].ENA
fifo_en => memory[5][5].ENA
fifo_en => memory[5][4].ENA
fifo_en => memory[5][3].ENA
fifo_en => memory[5][2].ENA
fifo_en => memory[5][1].ENA
fifo_en => memory[5][0].ENA
fifo_en => memory[6][11].ENA
fifo_en => memory[6][10].ENA
fifo_en => memory[6][9].ENA
fifo_en => memory[6][8].ENA
fifo_en => memory[6][7].ENA
fifo_en => memory[6][6].ENA
fifo_en => memory[6][5].ENA
fifo_en => memory[6][4].ENA
fifo_en => memory[6][3].ENA
fifo_en => memory[6][2].ENA
fifo_en => memory[6][1].ENA
fifo_en => memory[6][0].ENA
fifo_en => memory[7][11].ENA
fifo_en => memory[7][10].ENA
fifo_en => memory[7][9].ENA
fifo_en => memory[7][8].ENA
fifo_en => memory[7][7].ENA
fifo_en => memory[7][6].ENA
fifo_en => memory[7][5].ENA
fifo_en => memory[7][4].ENA
fifo_en => memory[7][3].ENA
fifo_en => memory[7][2].ENA
fifo_en => memory[7][1].ENA
fifo_en => memory[7][0].ENA
fifo_en => memory[8][11].ENA
fifo_en => memory[8][10].ENA
fifo_en => memory[8][9].ENA
fifo_en => memory[8][8].ENA
fifo_en => memory[8][7].ENA
fifo_en => memory[8][6].ENA
fifo_en => memory[8][5].ENA
fifo_en => memory[8][4].ENA
fifo_en => memory[8][3].ENA
fifo_en => memory[8][2].ENA
fifo_en => memory[8][1].ENA
fifo_en => memory[8][0].ENA
fifo_en => memory[9][11].ENA
fifo_en => memory[9][10].ENA
fifo_en => memory[9][9].ENA
fifo_en => memory[9][8].ENA
fifo_en => memory[9][7].ENA
fifo_en => memory[9][6].ENA
fifo_en => memory[9][5].ENA
fifo_en => memory[9][4].ENA
fifo_en => memory[9][3].ENA
fifo_en => memory[9][2].ENA
fifo_en => memory[9][1].ENA
fifo_en => memory[9][0].ENA
fifo_en => memory[10][11].ENA
fifo_en => memory[10][10].ENA
fifo_en => memory[10][9].ENA
fifo_en => memory[10][8].ENA
fifo_en => memory[10][7].ENA
fifo_en => memory[10][6].ENA
fifo_en => memory[10][5].ENA
fifo_en => memory[10][4].ENA
fifo_en => memory[10][3].ENA
fifo_en => memory[10][2].ENA
fifo_en => memory[10][1].ENA
fifo_en => memory[10][0].ENA
fifo_en => memory[11][11].ENA
fifo_en => memory[11][10].ENA
fifo_en => memory[11][9].ENA
fifo_en => memory[11][8].ENA
fifo_en => memory[11][7].ENA
fifo_en => memory[11][6].ENA
fifo_en => memory[11][5].ENA
fifo_en => memory[11][4].ENA
fifo_en => memory[11][3].ENA
fifo_en => memory[11][2].ENA
fifo_en => memory[11][1].ENA
fifo_en => memory[11][0].ENA
fifo_en => memory[12][11].ENA
fifo_en => memory[12][10].ENA
fifo_en => memory[12][9].ENA
fifo_en => memory[12][8].ENA
fifo_en => memory[12][7].ENA
fifo_en => memory[12][6].ENA
fifo_en => memory[12][5].ENA
fifo_en => memory[12][4].ENA
fifo_en => memory[12][3].ENA
fifo_en => memory[12][2].ENA
fifo_en => memory[12][1].ENA
fifo_en => memory[12][0].ENA
fifo_en => memory[13][11].ENA
fifo_en => memory[13][10].ENA
fifo_en => memory[13][9].ENA
fifo_en => memory[13][8].ENA
fifo_en => memory[13][7].ENA
fifo_en => memory[13][6].ENA
fifo_en => memory[13][5].ENA
fifo_en => memory[13][4].ENA
fifo_en => memory[13][3].ENA
fifo_en => memory[13][2].ENA
fifo_en => memory[13][1].ENA
fifo_en => memory[13][0].ENA
fifo_en => memory[14][11].ENA
fifo_en => memory[14][10].ENA
fifo_en => memory[14][9].ENA
fifo_en => memory[14][8].ENA
fifo_en => memory[14][7].ENA
fifo_en => memory[14][6].ENA
fifo_en => memory[14][5].ENA
fifo_en => memory[14][4].ENA
fifo_en => memory[14][3].ENA
fifo_en => memory[14][2].ENA
fifo_en => memory[14][1].ENA
fifo_en => memory[14][0].ENA
fifo_en => memory[15][11].ENA
fifo_en => memory[15][10].ENA
fifo_en => memory[15][9].ENA
fifo_en => memory[15][8].ENA
fifo_en => memory[15][7].ENA
fifo_en => memory[15][6].ENA
fifo_en => memory[15][5].ENA
fifo_en => memory[15][4].ENA
fifo_en => memory[15][3].ENA
fifo_en => memory[15][2].ENA
fifo_en => memory[15][1].ENA
fifo_en => memory[15][0].ENA
fifo_en => memory[16][11].ENA
fifo_en => memory[16][10].ENA
fifo_en => memory[16][9].ENA
fifo_en => memory[16][8].ENA
fifo_en => memory[16][7].ENA
fifo_en => memory[16][6].ENA
fifo_en => memory[16][5].ENA
fifo_en => memory[16][4].ENA
fifo_en => memory[16][3].ENA
fifo_en => memory[16][2].ENA
fifo_en => memory[16][1].ENA
fifo_en => memory[16][0].ENA
fifo_en => memory[17][11].ENA
fifo_en => memory[17][10].ENA
fifo_en => memory[17][9].ENA
fifo_en => memory[17][8].ENA
fifo_en => memory[17][7].ENA
fifo_en => memory[17][6].ENA
fifo_en => memory[17][5].ENA
fifo_en => memory[17][4].ENA
fifo_en => memory[17][3].ENA
fifo_en => memory[17][2].ENA
fifo_en => memory[17][1].ENA
fifo_en => memory[17][0].ENA
fifo_en => memory[18][11].ENA
fifo_en => memory[18][10].ENA
fifo_en => memory[18][9].ENA
fifo_en => memory[18][8].ENA
fifo_en => memory[18][7].ENA
fifo_en => memory[18][6].ENA
fifo_en => memory[18][5].ENA
fifo_en => memory[18][4].ENA
fifo_en => memory[18][3].ENA
fifo_en => memory[18][2].ENA
fifo_en => memory[18][1].ENA
fifo_en => memory[18][0].ENA
fifo_en => memory[19][11].ENA
fifo_en => memory[19][10].ENA
fifo_en => memory[19][9].ENA
fifo_en => memory[19][8].ENA
fifo_en => memory[19][7].ENA
fifo_en => memory[19][6].ENA
fifo_en => memory[19][5].ENA
fifo_en => memory[19][4].ENA
fifo_en => memory[19][3].ENA
fifo_en => memory[19][2].ENA
fifo_en => memory[19][1].ENA
fifo_en => memory[19][0].ENA
fifo_en => memory[20][11].ENA
fifo_en => memory[20][10].ENA
fifo_en => memory[20][9].ENA
fifo_en => memory[20][8].ENA
fifo_en => memory[20][7].ENA
fifo_en => memory[20][6].ENA
fifo_en => memory[20][5].ENA
fifo_en => memory[20][4].ENA
fifo_en => memory[20][3].ENA
fifo_en => memory[20][2].ENA
fifo_en => memory[20][1].ENA
fifo_en => memory[20][0].ENA
fifo_en => memory[21][11].ENA
fifo_en => memory[21][10].ENA
fifo_en => memory[21][9].ENA
fifo_en => memory[21][8].ENA
fifo_en => memory[21][7].ENA
fifo_en => memory[21][6].ENA
fifo_en => memory[21][5].ENA
fifo_en => memory[21][4].ENA
fifo_en => memory[21][3].ENA
fifo_en => memory[21][2].ENA
fifo_en => memory[21][1].ENA
fifo_en => memory[21][0].ENA
fifo_en => memory[22][11].ENA
fifo_en => memory[22][10].ENA
fifo_en => memory[22][9].ENA
fifo_en => memory[22][8].ENA
fifo_en => memory[22][7].ENA
fifo_en => memory[22][6].ENA
fifo_en => memory[22][5].ENA
fifo_en => memory[22][4].ENA
fifo_en => memory[22][3].ENA
fifo_en => memory[22][2].ENA
fifo_en => memory[22][1].ENA
fifo_en => memory[22][0].ENA
fifo_en => memory[23][11].ENA
fifo_en => memory[23][10].ENA
fifo_en => memory[23][9].ENA
fifo_en => memory[23][8].ENA
fifo_en => memory[23][7].ENA
fifo_en => memory[23][6].ENA
fifo_en => memory[23][5].ENA
fifo_en => memory[23][4].ENA
fifo_en => memory[23][3].ENA
fifo_en => memory[23][2].ENA
fifo_en => memory[23][1].ENA
fifo_en => memory[23][0].ENA
fifo_en => memory[24][11].ENA
fifo_en => memory[24][10].ENA
fifo_en => memory[24][9].ENA
fifo_en => memory[24][8].ENA
fifo_en => memory[24][7].ENA
fifo_en => memory[24][6].ENA
fifo_en => memory[24][5].ENA
fifo_en => memory[24][4].ENA
fifo_en => memory[24][3].ENA
fifo_en => memory[24][2].ENA
fifo_en => memory[24][1].ENA
fifo_en => memory[24][0].ENA
fifo_en => memory[25][11].ENA
fifo_en => memory[25][10].ENA
fifo_en => memory[25][9].ENA
fifo_en => memory[25][8].ENA
fifo_en => memory[25][7].ENA
fifo_en => memory[25][6].ENA
fifo_en => memory[25][5].ENA
fifo_en => memory[25][4].ENA
fifo_en => memory[25][3].ENA
fifo_en => memory[25][2].ENA
fifo_en => memory[25][1].ENA
fifo_en => memory[25][0].ENA
fifo_en => memory[26][11].ENA
fifo_en => memory[26][10].ENA
fifo_en => memory[26][9].ENA
fifo_en => memory[26][8].ENA
fifo_en => memory[26][7].ENA
fifo_en => memory[26][6].ENA
fifo_en => memory[26][5].ENA
fifo_en => memory[26][4].ENA
fifo_en => memory[26][3].ENA
fifo_en => memory[26][2].ENA
fifo_en => memory[26][1].ENA
fifo_en => memory[26][0].ENA
fifo_en => memory[27][11].ENA
fifo_en => memory[27][10].ENA
fifo_en => memory[27][9].ENA
fifo_en => memory[27][8].ENA
fifo_en => memory[27][7].ENA
fifo_en => memory[27][6].ENA
fifo_en => memory[27][5].ENA
fifo_en => memory[27][4].ENA
fifo_en => memory[27][3].ENA
fifo_en => memory[27][2].ENA
fifo_en => memory[27][1].ENA
fifo_en => memory[27][0].ENA
fifo_en => memory[28][11].ENA
fifo_en => memory[28][10].ENA
fifo_en => memory[28][9].ENA
fifo_en => memory[28][8].ENA
fifo_en => memory[28][7].ENA
fifo_en => memory[28][6].ENA
fifo_en => memory[28][5].ENA
fifo_en => memory[28][4].ENA
fifo_en => memory[28][3].ENA
fifo_en => memory[28][2].ENA
fifo_en => memory[28][1].ENA
fifo_en => memory[28][0].ENA
fifo_en => memory[29][11].ENA
fifo_en => memory[29][10].ENA
fifo_en => memory[29][9].ENA
fifo_en => memory[29][8].ENA
fifo_en => memory[29][7].ENA
fifo_en => memory[29][6].ENA
fifo_en => memory[29][5].ENA
fifo_en => memory[29][4].ENA
fifo_en => memory[29][3].ENA
fifo_en => memory[29][2].ENA
fifo_en => memory[29][1].ENA
fifo_en => memory[29][0].ENA
fifo_en => memory[30][11].ENA
fifo_en => memory[30][10].ENA
fifo_en => memory[30][9].ENA
fifo_en => memory[30][8].ENA
fifo_en => memory[30][7].ENA
fifo_en => memory[30][6].ENA
fifo_en => memory[30][5].ENA
fifo_en => memory[30][4].ENA
fifo_en => memory[30][3].ENA
fifo_en => memory[30][2].ENA
fifo_en => memory[30][1].ENA
fifo_en => memory[30][0].ENA
fifo_en => memory[31][11].ENA
fifo_en => memory[31][10].ENA
fifo_en => memory[31][9].ENA
fifo_en => memory[31][8].ENA
fifo_en => memory[31][7].ENA
fifo_en => memory[31][6].ENA
fifo_en => memory[31][5].ENA
fifo_en => memory[31][4].ENA
fifo_en => memory[31][3].ENA
fifo_en => memory[31][2].ENA
fifo_en => memory[31][1].ENA
fifo_en => memory[31][0].ENA
read_data[0] <= temp_read[0].DB_MAX_OUTPUT_PORT_TYPE
read_data[1] <= temp_read[1].DB_MAX_OUTPUT_PORT_TYPE
read_data[2] <= temp_read[2].DB_MAX_OUTPUT_PORT_TYPE
read_data[3] <= temp_read[3].DB_MAX_OUTPUT_PORT_TYPE
read_data[4] <= temp_read[4].DB_MAX_OUTPUT_PORT_TYPE
read_data[5] <= temp_read[5].DB_MAX_OUTPUT_PORT_TYPE
read_data[6] <= temp_read[6].DB_MAX_OUTPUT_PORT_TYPE
read_data[7] <= temp_read[7].DB_MAX_OUTPUT_PORT_TYPE
read_data[8] <= temp_read[8].DB_MAX_OUTPUT_PORT_TYPE
read_data[9] <= temp_read[9].DB_MAX_OUTPUT_PORT_TYPE
read_data[10] <= temp_read[10].DB_MAX_OUTPUT_PORT_TYPE
read_data[11] <= temp_read[11].DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|rx_fsm:RX_FSM_BLOCK
baud_tick => present_state~10.DATAIN
PRESETn => present_state~12.DATAIN
parity_bit_mode => always2.IN0
parity_bit_mode => always2.IN0
stop_bit_twice => always2.IN0
stop_bit_twice => always2.IN0
data_is_avail => ~NO_FANOUT~
data_is_ready => ~NO_FANOUT~
RXen => always0.IN0
RXen => always0.IN0
RXen => Decoder1.IN0
RXen => always0.IN0
PWRITE => always0.IN1
PWRITE => always0.IN1
PWRITE => always0.IN1
start_bit => always2.IN1
start_bit => always2.IN1
start_bit => always2.IN1
start_bit => next_state.ERROR.IN1
start_bit => next_state.ERROR.IN1
start_bit => next_state.DATA_IS_8.OUTPUTSELECT
start_bit => next_state.DATA_IS_7.OUTPUTSELECT
start_bit => next_state.DATA_IS_6.OUTPUTSELECT
start_bit => next_state.DATA_IS_5.OUTPUTSELECT
start_bit => Selector7.IN3
data_is_received => always2.IN1
data_is_received => always2.IN1
parity_bit => Selector13.IN7
parity_bit => Selector3.IN6
stop_bit => always2.IN1
stop_bit => always2.IN1
stop_bit => Selector15.IN3
stop_bit => Selector6.IN8
stop_bit => Selector3.IN8
number_data_receive[0] => Decoder0.IN3
number_data_receive[1] => Decoder0.IN2
number_data_receive[2] => Decoder0.IN1
number_data_receive[3] => Decoder0.IN0
ctrl_shift_register[0] <= ctrl_shift_register.DB_MAX_OUTPUT_PORT_TYPE
ctrl_shift_register[1] <= WideOr7.DB_MAX_OUTPUT_PORT_TYPE
ctrl_shift_register[2] <= ctrl_shift_register[2].DB_MAX_OUTPUT_PORT_TYPE
ctrl_shift_register[3] <= ctrl_shift_register.DB_MAX_OUTPUT_PORT_TYPE
ctrl_rx_buffer <= ctrl_rx_buffer$latch.DB_MAX_OUTPUT_PORT_TYPE
error_rx_detect <= error_rx_detect.DB_MAX_OUTPUT_PORT_TYPE
timeout_flag <= timeout_flag.DB_MAX_OUTPUT_PORT_TYPE
rx_done <= Selector15.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|shift_register_rd:SHIFT_REGISTER_BLOCK
parity_bit_mode => parity_bit_read.OUTPUTSELECT
stop_bit_twice => done_receive_stage.DATAB
number_data_receive[0] => Decoder0.IN3
number_data_receive[1] => Decoder0.IN2
number_data_receive[2] => Decoder0.IN1
number_data_receive[3] => Decoder0.IN0
ctrl_shift_register[0] => Decoder1.IN3
ctrl_shift_register[1] => Decoder1.IN2
ctrl_shift_register[2] => Decoder1.IN1
ctrl_shift_register[3] => Decoder1.IN0
data_in[0] => start_bit.DATAB
data_in[1] => always0.IN0
data_in[1] => temp_reg[0].DATAIN
data_in[2] => always0.IN1
data_in[2] => temp_reg[1].DATAIN
data_in[3] => always0.IN1
data_in[3] => temp_reg[2].DATAIN
data_in[4] => always0.IN1
data_in[4] => temp_reg[3].DATAIN
data_in[5] => always0.IN1
data_in[5] => temp_reg[4].DATAIN
data_in[6] => always0.IN1
data_in[6] => temp_reg.DATAA
data_in[7] => always0.IN1
data_in[7] => temp_reg.DATAA
data_in[8] => always0.IN1
data_in[8] => temp_reg.DATAA
data_in[9] => always1.IN1
data_in[10] => done_receive_stage.OUTPUTSELECT
data_in[10] => Selector0.IN5
data_in[11] => Selector0.IN4
data_in[11] => Selector1.IN5
start_bit <= start_bit.DB_MAX_OUTPUT_PORT_TYPE
data_is_received <= Decoder1.DB_MAX_OUTPUT_PORT_TYPE
parity_bit <= parity_bit.DB_MAX_OUTPUT_PORT_TYPE
stop_bit <= Selector0.DB_MAX_OUTPUT_PORT_TYPE
rx_out[0] <= rx_out[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[1] <= rx_out[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[2] <= rx_out[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[3] <= rx_out[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[4] <= rx_out[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[5] <= rx_out[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[6] <= rx_out[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_out[7] <= rx_out[7]$latch.DB_MAX_OUTPUT_PORT_TYPE


|AHB_APB_UART|APB_UART:APB_UART_BLOCK|D_FF_8bit:DFF_TEMPORARY_STORING_READ
rst_ni => q_reg[0].ACLR
rst_ni => q_reg[1].ACLR
rst_ni => q_reg[2].ACLR
rst_ni => q_reg[3].ACLR
rst_ni => q_reg[4].ACLR
rst_ni => q_reg[5].ACLR
rst_ni => q_reg[6].ACLR
rst_ni => q_reg[7].ACLR
clk_i => q_reg[0].CLK
clk_i => q_reg[1].CLK
clk_i => q_reg[2].CLK
clk_i => q_reg[3].CLK
clk_i => q_reg[4].CLK
clk_i => q_reg[5].CLK
clk_i => q_reg[6].CLK
clk_i => q_reg[7].CLK
enable => q_reg[0].ENA
enable => q_reg[7].ENA
enable => q_reg[6].ENA
enable => q_reg[5].ENA
enable => q_reg[4].ENA
enable => q_reg[3].ENA
enable => q_reg[2].ENA
enable => q_reg[1].ENA
D[0] => q_reg[0].DATAIN
D[1] => q_reg[1].DATAIN
D[2] => q_reg[2].DATAIN
D[3] => q_reg[3].DATAIN
D[4] => q_reg[4].DATAIN
D[5] => q_reg[5].DATAIN
D[6] => q_reg[6].DATAIN
D[7] => q_reg[7].DATAIN
Q[0] <= q_reg[0].DB_MAX_OUTPUT_PORT_TYPE
Q[1] <= q_reg[1].DB_MAX_OUTPUT_PORT_TYPE
Q[2] <= q_reg[2].DB_MAX_OUTPUT_PORT_TYPE
Q[3] <= q_reg[3].DB_MAX_OUTPUT_PORT_TYPE
Q[4] <= q_reg[4].DB_MAX_OUTPUT_PORT_TYPE
Q[5] <= q_reg[5].DB_MAX_OUTPUT_PORT_TYPE
Q[6] <= q_reg[6].DB_MAX_OUTPUT_PORT_TYPE
Q[7] <= q_reg[7].DB_MAX_OUTPUT_PORT_TYPE


